
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда     
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("СтруктураЗадания", СтруктураЗадания) Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	Заголовок = СтруктураЗадания.ИмяРегламентногоЗадания;
	
	ШаблонСообщения = НСтр("ru = 'Идёт выполнение ""%1""...'");
	Элементы.ДекорацияНадпись.Заголовок = СтрШаблон(ШаблонСообщения, СтруктураЗадания.ИмяРегламентногоЗадания);
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(СтруктураЗадания.ФоновоеЗадание);
	
	Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст("Начало работы: "     + ФоновоеЗадание.Начало       , Сообщения, Символы.ПС);
	Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст("Имя метода: "        + ФоновоеЗадание.ИмяМетода    , Сообщения, Символы.ПС);
	Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст("Ключ задания: "      + ФоновоеЗадание.Ключ         , Сообщения, Символы.ПС);
	Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст("Наименование: "      + ФоновоеЗадание.Наименование , Сообщения, Символы.ПС);
	Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст("Текущее состояние: " + ФоновоеЗадание.Состояние    , Сообщения, Символы.ПС);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДатаНачалаОткрытия = Спец_ОбщегоНазначенияКлиентСервер.ТекущаяДатаПоНормальному();
	ПодключитьОбработчикОжидания("ОбновитьСтатусВыполненияЗадания", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не МожноЗакрыватьФорму Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	МожноЗакрыватьФорму = Истина;
	Закрыть(СтруктураЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПрерватьВыполнениеЗадания(Команда)
	
	ОтключитьОбработчикОжидания("ОбновитьСтатусВыполненияЗадания");
	ПрерватьВыполнениеЗаданияНаСервере(СтруктураЗадания);
	
	ОбновитьСтатусВыполненияЗадания();
	Элементы.ПрерватьВыполнениеЗадания.Доступность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПрерватьВыполнениеЗаданияНаСервере(Знач СтруктураЗадания)
	
	ЭтоИдентификатор = ТипЗнч(СтруктураЗадания.ФоновоеЗадание) = Тип("УникальныйИдентификатор");
	ФоновоеЗадание = ?(ЭтоИдентификатор,
			ФоновыеЗадания.НайтиПоУникальномуИдентификатору(СтруктураЗадания.ФоновоеЗадание),
			СтруктураЗадания.ФоновоеЗадание);
	
	ФоновоеЗадание.Отменить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусВыполненияЗадания()
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		СтруктураСостояния = Спец_РаботаСФоновымиЗаданиями.ПолучитьСтруктуруСостоянияФоновогоЗадания(СтруктураЗадания);
	#Иначе
		СтруктураСостояния = Спец_РаботаСФоновымиЗаданиямиВызовСервера.ПолучитьСтруктуруСостоянияФоновогоЗадания(СтруктураЗадания);
	#КонецЕсли
	
	Если СтруктураСостояния.Завершено Тогда
		
		РезультатВыполненияФоновогоЗаданияВызовСервераЕслиТребуется(СтруктураЗадания);
		Если Не ПустаяСтрока(СтруктураЗадания.ТекстОшибки) Тогда
			
			Если Не ПустаяСтрока(СтруктураСостояния.ТекстСообщений) Тогда
				Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст(СтруктураСостояния.ТекстСообщений, Сообщения, Символы.ПС + Символы.ПС);
			КонецЕсли;
			
			Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст(СтруктураЗадания.ТекстОшибки, Сообщения, Символы.ПС + Символы.ПС);
			
			Элементы.Закрыть.Видимость = Истина;
			Элементы.ПрерватьВыполнениеЗадания.Видимость = Ложь;
			Элементы.ГруппаГоризонтальная.Видимость = Ложь;
			Элементы.Прогресс.Видимость = Ложь;
			
		Иначе
			
			КомандаЗакрыть(Элементы.Закрыть);
			
		КонецЕсли;
		
	Иначе
		
		Если Не ПустаяСтрока(СтруктураСостояния.ТекстСообщений) Тогда
			
			Спец_СтроковыеФункцииКлиентСервер.ДобавитьСтрокуВТекст(СтруктураСостояния.ТекстСообщений, Сообщения, Символы.ПС + Символы.ПС);
			ПодключитьОбработчикОжидания("УстановитьКурсорНаКонецСтроки", 0.0001, Истина);
			
		КонецЕсли;
		
		Прогресс = СтруктураСостояния.Прогресс;
		Элементы.ДекорацияНадпись.Заголовок = СтруктураСостояния.СообщениеСтатусВыполнения;
		
		Если Не ВопросПоказан И Спец_ОбщегоНазначенияКлиентСервер.ТекущаяДатаПоНормальному() - ДатаНачалаОткрытия > СтруктураЗадания.ТаймаутВыполнения Тогда
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьСтатусВыполненияЗадания_ПослеВопросаЗависания", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, "Нужно продолжать ожидать завершения задания?", РежимДиалогаВопрос.ДаНет, 10, , "Зависло?");
			
			ВопросПоказан = Истина;
			
		КонецЕсли;
		
		ПодключитьОбработчикОжидания("ОбновитьСтатусВыполненияЗадания", 1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусВыполненияЗадания_ПослеВопросаЗависания(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	ВопросПоказан = Ложь;
	Если Результат = КодВозвратаДиалога.Нет Тогда
		
		РезультатВыполненияФоновогоЗаданияВызовСервераЕслиТребуется(СтруктураЗадания);
		КомандаЗакрыть(Элементы.Закрыть);
		
	Иначе
		
		ДатаНачалаОткрытия = Спец_ОбщегоНазначенияКлиентСервер.ТекущаяДатаПоНормальному();;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКурсорНаКонецСтроки()
	
	ГраницаВыделения = СтрДлина(Сообщения) + 1;
	Элементы.Сообщения.УстановитьГраницыВыделения(ГраницаВыделения, ГраницаВыделения);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатВыполненияФоновогоЗаданияВызовСервераЕслиТребуется(СтруктураЗадания)
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Спец_РаботаСФоновымиЗаданиями.РезультатВыполненияФоновогоЗадания(СтруктураЗадания, Истина);
	#Иначе
		Спец_РаботаСФоновымиЗаданиямиВызовСервера.РезультатВыполненияФоновогоЗадания(СтруктураЗадания, Истина);
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти
