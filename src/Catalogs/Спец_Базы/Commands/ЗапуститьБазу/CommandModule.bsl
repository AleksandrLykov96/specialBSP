// @strict-types

#Область ОбработчикиСобытий

// Параметры:
//  ПараметрКоманды - СправочникСсылка.Спец_Базы
//  ПараметрыВыполненияКоманды - ПараметрыВыполненияКоманды
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	// Правим hosts (для баз аптек)
	РеквизитыБазы = ПолучитьРеквизитыБазыДляЗапуска(ПараметрКоманды);
	Если Спец_СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(РеквизитыБазы.Код)
		И Не СтрНачинаетсяС(ВРег(РеквизитыБазы.АдресСервераИБ), "SERVER-") Тогда
		
		ПодправитьHosts(ПараметрКоманды, РеквизитыБазы);
		
	Иначе
		
		ЗапуститьПриложение1С(ПараметрКоманды, РеквизитыБазы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  База - СправочникСсылка.Спец_Базы
//  РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
&НаКлиенте
Процедура ПодправитьHosts(Знач База, РеквизитыБазы)
	
	ТипОС = Спец_ПолучитьЗначениеПеременной("ОперационнаяСистемаКлиент"); // ПеречислениеСсылка.Спец_ОперационныеСистемы
	Попытка
		
		Если ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.Windows") Тогда
			ИмяФайлаДляРаботы  = "C:\Windows\System32\drivers\etc\hosts";
		ИначеЕсли ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.UNIX") Тогда
			ИмяФайлаДляРаботы = "/etc/hosts";
		Иначе
			ВызватьИсключение "Для ОС " + ТипОС + " не реализовано!";
		КонецЕсли;
		
		ТекущиеДанныеHosts = Спец_ОбщегоНазначенияКлиентСервер.ПрочитатьЧтениеТекста(ИмяФайлаДляРаботы);
		Спец_Проверить(Не ПустаяСтрока(ТекущиеДанныеHosts), "Не удалось получить данные файла hosts"); 
		
	Исключение
		
		ТекстСообщения  = СтрШаблон("Не удалось открыть файл hosts! Возможно, 1С открыт не в режиме администратора/sudo.%1%2",
				Символы.ПС,
				Спец_ОбщегоНазначенияКлиентСервер.ПодробноеПредставлениеОшибкиЧерезОбработкуОшибок(ИнформацияОбОшибке(), Символы.Таб));
		
		ВызватьИсключение ТекстСообщения;
		
	КонецПопытки;
	
	СтруктураДополнительныеПараметры = НоваяСтруктураДополнительныеПараметрыДляПравкиHosts(База,
			РеквизитыБазы,
			"server-" + Спец_СтроковыеФункцииКлиентСервер.ДополнитьСтроку(РеквизитыБазы.Код, 4));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоправитьHostsПослеПолученияПотока", ЭтотОбъект, СтруктураДополнительныеПараметры);
	Если СтрНайти(ТекущиеДанныеHosts, РеквизитыБазы.АдресСервераИБ) = 0 Тогда
		
		//@skip-check invocation-parameter-type-intersect
		ФайловыеПотоки.НачатьОткрытиеДляДописывания(ОписаниеОповещения, ИмяФайлаДляРаботы);
		
	Иначе
		
		//@skip-check invocation-parameter-type-intersect
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
//  ФайловыйПоток - ФайловыйПоток, Неопределено -
//  ДополнительныеПараметры - см. НоваяСтруктураДополнительныеПараметрыДляПравкиHosts
&НаКлиенте
Процедура ПоправитьHostsПослеПолученияПотока(Знач ФайловыйПоток, Знач ДополнительныеПараметры) Экспорт
	
	#Если Не ВебКлиент Тогда
		
		Если ФайловыйПоток <> Неопределено Тогда
			
			ЗаписьТекста = Новый ЗаписьТекста(ФайловыйПоток);
			ЗаписьТекста.ЗаписатьСтроку(СтрШаблон("%1 %2", ДополнительныеПараметры.РеквизитыБазы.АдресСервераИБ, ДополнительныеПараметры.ИмяСервера));
			ЗаписьТекста.Закрыть();
			
			Спец_ОбщегоНазначенияКлиентСервер.ЗакрытьПотокНеМешаяРаботе(ФайловыйПоток, Истина);
			
		КонецЕсли;
		
		ДополнительныеПараметры.РеквизитыБазы.АдресСервераИБ = ДополнительныеПараметры.ИмяСервера;
		ЗапуститьПриложение1С(ДополнительныеПараметры.База, ДополнительныеПараметры.РеквизитыБазы);
		
	#Иначе
		
		ВызватьИсключение "Недоступно на веб-клиенте";
		
	#КонецЕсли
	
КонецПроцедуры

// Параметры:
//  База -  СправочникСсылка.Спец_Базы
//  РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
&НаКлиенте
Процедура ЗапуститьПриложение1С(Знач База, Знач РеквизитыБазы)
	
	// Сначала пингуем сервер
	ТипОС = Спец_ПолучитьЗначениеПеременной("ОперационнаяСистемаКлиент"); // ПеречислениеСсылка.Спец_ОперационныеСистемы
	
	СтруктураДополнительныеПараметры = НоваяСтруктураДополнительныеПараметрыДляЗапуска1С(База, РеквизитыБазы, ТипОС);
	Если СтруктураДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.UNIX") Тогда
		
		СтрокаКоманды = "ping " + РеквизитыБазы.АдресСервераИБ + " -с 1 -w 3";
		
	ИначеЕсли СтруктураДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.Windows") Тогда
		
		СтрокаКоманды = "ping " + РеквизитыБазы.АдресСервераИБ + " -n 1 -w 3000";
		
	Иначе
		
		ВызватьИсключение "Неизвестная ОС у Вас!";
		
	КонецЕсли;
	
	Спец_ОбщегоНазначенияКлиентСервер.ВыполнитьКомандуСистемы(СтрокаКоманды,
			Истина,
			Истина,
			Новый ОписаниеОповещения("ПослеПингаСервера", ЭтотОбъект, СтруктураДополнительныеПараметры));
	
КонецПроцедуры

// Параметры:
//  РезультатВыполнения - Строка
//  ДополнительныеПараметры - см. НоваяСтруктураДополнительныеПараметрыДляЗапуска1С
&НаКлиенте
Процедура ПослеПингаСервера(Знач РезультатВыполнения, Знач ДополнительныеПараметры) Экспорт
	
	НрегСтрокаВыполненияПинга = НРег(РезультатВыполнения);
	Если ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.UNIX") Тогда
		
		Если СтрНайти(НрегСтрокаВыполненияПинга, "1 received") = 0 И СтрНайти(НрегСтрокаВыполненияПинга, "1 получено") = 0 Тогда
			ВызватьИсключение "Не удалось пропинговать сервер базы! Текст пинга:" + Символы.ПС + Символы.ПС + РезультатВыполнения;
		КонецЕсли;
		
	ИначеЕсли ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.Windows") Тогда
		
		Если СтрНайти(НрегСтрокаВыполненияПинга, "received = 1") = 0 И СтрНайти(НрегСтрокаВыполненияПинга, "получено = 1") = 0 Тогда
			ВызватьИсключение "Не удалось пропинговать сервер базы! Текст пинга:" + Символы.ПС + Символы.ПС + РезультатВыполнения;
		КонецЕсли;
		
	КонецЕсли;
	
	СписокКнопок = Новый СписокЗначений; // СписокЗначений из КодВозвратаДиалога
	
	СписокКнопок.Добавить(КодВозвратаДиалога.Да     , "Предприятие");
	СписокКнопок.Добавить(КодВозвратаДиалога.Нет    , "Конфигуратор");
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена , "Отмена");
	
	//@skip-check invocation-parameter-type-intersect
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеВыбораТипаБазы", ЭтотОбъект, ДополнительныеПараметры),
			"Выберите тип запуска 1С",
			СписокКнопок,
			120,
			КодВозвратаДиалога.Да,
			"Запуск 1С",
			КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

// Параметры:
//  КодВозврата - КодВозвратаДиалога
//  ДополнительныеПараметры - см. НоваяСтруктураДополнительныеПараметрыДляЗапуска1С
&НаКлиенте
Процедура ПослеВыбораТипаБазы(Знач КодВозврата, Знач ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		
		Если ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.Windows") Тогда
			
			ШаблонКоманды = """%(1)1cv8.exe"" ENTERPRISE /S""%2\%3"" /N""%4"" /DisableStartupMessages";
			
		ИначеЕсли ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.UNIX") Тогда
			
			ШаблонКоманды = "'%(1)1cestart' ENTERPRISE /S""%2\%3"" /N""%4"" /DisableStartupMessages";
			
		КонецЕсли;
		
	ИначеЕсли КодВозврата = КодВозвратаДиалога.Нет Тогда
		
		Если ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.Windows") Тогда
			
			ШаблонКоманды = """%(1)1cv8.exe"" DESIGNER /S""%2\%3"" /N""%4"" /DisableStartupMessages";
			
		ИначеЕсли ДополнительныеПараметры.ТипОС = ПредопределенноеЗначение("Перечисление.Спец_ОперационныеСистемы.UNIX") Тогда
			
			ШаблонКоманды = "'%(1)1cestart' DESIGNER /S""%2\%3"" /N""%4"" /DisableStartupMessages";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ШаблонКоманды) Тогда
		Возврат;
	КонецЕсли;
	
	#Если Не ВебКлиент Тогда
		
		ТекстКоманды = СтрШаблон(ШаблонКоманды,
				КаталогПрограммы(),
				ДополнительныеПараметры.РеквизитыБазы.АдресСервераИБ,
				ДополнительныеПараметры.РеквизитыБазы.Код,
				Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1СПолноеИмя());
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗапуска1С", ЭтотОбъект);
		
		//@skip-check invocation-parameter-type-intersect
		НачатьЗапускПриложения(ОписаниеОповещения, ТекстКоманды, , Ложь);
		
	#Иначе
		
		ВызватьИсключение "Недоступно на веб-клиенте";
		
	#КонецЕсли
	
КонецПроцедуры

// Параметры:
//  Результат - Число
//  ДополнительныеПараметры - Неопределено
&НаКлиенте
Процедура ПослеЗапуска1С(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Спец_ОбщегоНазначенияКлиент.СообщитьПользователю("Успешно");
	
КонецПроцедуры

//@skip-check constructor-function-return-section
#Область Типизация

// Параметры:
//  База - СправочникСсылка.Спец_Базы
// 
// Возвращаемое значение:
//  Структура:
//  	* АдресСервераИБ - Строка
//  	* Код - Строка
//
&НаКлиенте
Функция ПолучитьРеквизитыБазыДляЗапуска(Знач База)
	
	//@skip-check constructor-function-return-section
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Возврат Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(База, "АдресСервераИБ, Код");
	#Иначе
		Возврат Спец_ОбщегоНазначенияВызовСервера.ЗначенияРеквизитовОбъекта(База, "АдресСервераИБ, Код");
	#КонецЕсли
	
КонецФункции

// Параметры:
//  База - СправочникСсылка.Спец_Базы
//  РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
//  ИмяСервера - Строка
// 
// Возвращаемое значение:
//  Структура:
//  	* База - СправочникСсылка.Спец_Базы
//  	* РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
//  	* ИмяСервера - Строка
//
&НаКлиенте
Функция НоваяСтруктураДополнительныеПараметрыДляПравкиHosts(Знач База, Знач РеквизитыБазы, Знач ИмяСервера)
	
	Возврат Новый Структура("База, РеквизитыБазы, ИмяСервера",
			База,
			РеквизитыБазы,
			"server-" + Спец_СтроковыеФункцииКлиентСервер.ДополнитьСтроку(РеквизитыБазы.Код, 4));
	
КонецФункции

// Параметры:
//  База - СправочникСсылка.Спец_Базы
//  РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
//  ТипОС - ПеречислениеСсылка.Спец_ОперационныеСистемы
// 
// Возвращаемое значение:
//  Структура:
// * База - СправочникСсылка.Спец_Базы
// * РеквизитыБазы - см. ПолучитьРеквизитыБазыДляЗапуска
// * ТипОС - ПеречислениеСсылка.Спец_ОперационныеСистемы
&НаКлиенте
Функция НоваяСтруктураДополнительныеПараметрыДляЗапуска1С(Знач База, Знач РеквизитыБазы, Знач ТипОС)
	
	Возврат Новый Структура("База, РеквизитыБазы, ТипОС",
			База,
			РеквизитыБазы,
			ТипОС);
	
КонецФункции

#КонецОбласти

#КонецОбласти
