
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьДанныеПоОбъектам();
	
	МассивИменРеквизитов = Спец_ОбщегоНазначения.ПолучитьСтруктуруВсехРеквизитовОбъекта(Метаданные.РегистрыСведений.Спец_ОбъектыДляЛогирования, Истина).МассивРеквизитов;
	ИменаРеквизитов_ПараметрыЛогирования = СтрСоединить(МассивИменРеквизитов, ",");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОбновитьДанные(Команда)
	
	Спец_ОбщегоНазначенияКлиент.ВывестиСостояние("Идёт обновление данных...", 1, , БиблиотекаКартинок.Спец_ДлительнаяОперация);
	ОбновитьДанныеПоОбъектам();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИзменения(Команда)
	
	ЗаписатьНовыеДанныеПоЛогированию();
	КомандаОбновитьДанные(Элементы.ФормаОбновитьДанные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДанныеПоОбъектам()
	
	ТаблицаВсеОбъектыМетаданных.Очистить();
	
	// Заполняем объекты
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыДляЛогирования.ИмяМетаданных КАК ИмяМетаданных
	|ИЗ
	|	РегистрСведений.Спец_ОбъектыДляЛогирования КАК ОбъектыДляЛогирования";
	
	МассивИменВключенныхОбъектов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяМетаданных");
	
	// 1. Справочники
	НоваяСтрокаСправочник = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаСправочник.ТипОбъекта = "Справочники";
	НоваяСтрокаСправочник.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Справочник, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаСправочник.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 2. Документы
	НоваяСтрокаДокумент = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаДокумент.ТипОбъекта = "Документы";
	НоваяСтрокаДокумент.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Документ, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.Документы Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаДокумент.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 3. Планы видов характеристик
	НоваяСтрокаПланВидовХарактеристик = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаПланВидовХарактеристик.ТипОбъекта = "Планы видов характеристик";
	НоваяСтрокаПланВидовХарактеристик.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПланВидовХарактеристик, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыВидовХарактеристик Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаПланВидовХарактеристик.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 4. Планы счетов
	НоваяСтрокаПланСчетов = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаПланСчетов.ТипОбъекта = "Планы счетов";
	НоваяСтрокаПланСчетов.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПланСчетов, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыСчетов Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаПланСчетов.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 5. Планы видов расчета
	НоваяСтрокаПланВидовРасчета = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаПланВидовРасчета.ТипОбъекта = "Планы видов расчета";
	НоваяСтрокаПланВидовРасчета.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ПланВидовРасчета, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыВидовРасчета Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаПланВидовРасчета.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 6. Регистры сведений
	НоваяСтрокаРегистрСведений = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаРегистрСведений.ТипОбъекта = "Регистры сведений";
	НоваяСтрокаРегистрСведений.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.РегистрСведений, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыСведений Цикл
		
		Если ОбъектМетаданных = Метаданные.РегистрыСведений.Спец_ОбъектыДляЛогирования
			Или ОбъектМетаданных = Метаданные.РегистрыСведений.Спец_ЛогиПоОбъектам Тогда // Переполнение стека
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрокаОбъект = НоваяСтрокаРегистрСведений.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 7. Регистры накоплений
	НоваяСтрокаРегистрНакоплений = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаРегистрНакоплений.ТипОбъекта = "Регистры накоплений";
	НоваяСтрокаРегистрНакоплений.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.РегистрНакопления, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыНакопления Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаРегистрНакоплений.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 8. Регистры бухгалтерии
	НоваяСтрокаРегистрБухгалтерии = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаРегистрБухгалтерии.ТипОбъекта = "Регистры бухгалтерии";
	НоваяСтрокаРегистрБухгалтерии.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.РегистрБухгалтерии, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыБухгалтерии Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаРегистрБухгалтерии.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 9. Регистры расчета
	НоваяСтрокаРегистрРасчета = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаРегистрРасчета.ТипОбъекта = "Регистры расчета";
	НоваяСтрокаРегистрРасчета.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.РегистрРасчета, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыБухгалтерии Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаРегистрРасчета.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 10. Бизнес-процессы
	НоваяСтрокаБизнесПроцесс = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаБизнесПроцесс.ТипОбъекта = "Бизнес-процессы";
	НоваяСтрокаБизнесПроцесс.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.БизнесПроцесс, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.БизнесПроцессы Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаБизнесПроцесс.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 11. Задачи
	НоваяСтрокаЗадача = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаЗадача.ТипОбъекта = "Задачи";
	НоваяСтрокаЗадача.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Задача, УникальныйИдентификатор);
	
	Для Каждого ОбъектМетаданных Из Метаданные.Задачи Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаЗадача.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление       = ОбъектМетаданных.Представление();
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(ОбъектМетаданных.ПолноеИмя()) <> Неопределено;
		
	КонецЦикла;
	
	// 12. Пользователи
	НоваяСтрокаПользователи = ТаблицаВсеОбъектыМетаданных.Добавить();
	
	НоваяСтрокаПользователи.ТипОбъекта = "Пользователи";
	НоваяСтрокаПользователи.Иконка     = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Пользователь, УникальныйИдентификатор);
	
	Для Каждого Пользователь Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		
		НоваяСтрокаОбъект = НоваяСтрокаПользователи.ТаблицаОбъектовМетаданныхПоТипу.Добавить();
		
		НоваяСтрокаОбъект.ПолноеИмяМетаданных = Пользователь.ПолноеИмя;
		НоваяСтрокаОбъект.Представление       = Пользователь.ПолноеИмя;
		НоваяСтрокаОбъект.ВключитьЛогирование = МассивИменВключенныхОбъектов.Найти(Пользователь.ПолноеИмя) <> Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНовыеДанныеПоЛогированию()
	
	НачатьТранзакцию();
	
	Кэш = Спец_ПолучитьКэш();
	Отказ = Ложь;
	
	Для Каждого СтрокаПараметрТаблицы Из ТаблицаВсеОбъектыМетаданных Цикл
		
		Для Каждого СтрокаОбъектМетаданных Из СтрокаПараметрТаблицы.ТаблицаОбъектовМетаданныхПоТипу Цикл
			
			НаборЗаписей = РегистрыСведений.Спец_ОбъектыДляЛогирования.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ИмяМетаданных.Установить(СтрокаОбъектМетаданных.ПолноеИмяМетаданных);
			
			НаборЗаписей.Прочитать();
			
			Если Не СтрокаОбъектМетаданных.ВключитьЛогирование И НаборЗаписей.Количество() Тогда
				
				НаборЗаписей.Очистить();
				Спец_ОбщегоНазначения.ЗаписатьОбъект(НаборЗаписей, , , Отказ, Кэш, , , Ложь);
				
			ИначеЕсли СтрокаОбъектМетаданных.ВключитьЛогирование И НаборЗаписей.Количество() = 0 Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.ИмяМетаданных = СтрокаОбъектМетаданных.ПолноеИмяМетаданных;
				
				Спец_ОбщегоНазначения.ЗаписатьОбъект(НаборЗаписей, , , Отказ, Кэш, , , Ложь);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если Отказ Тогда
		
		ОтменитьТранзакцию();
		
	Иначе
		
		Модифицированность = Ложь;
		Спец_ОбщегоНазначения.СообщитьПользователю("Успешно", , , , , УникальныйИдентификатор);
		
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
