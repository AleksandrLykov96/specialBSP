
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрСведений.Спец_НастройкиНочногоРасчета КАК Спец_НастройкиНочногоРасчета";
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	Пока ВыборкаРезультат.Следующий() Цикл
		
		НоваяСтрока = ТаблицаРегламентов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаРезультат, , "ВходныеПараметры");
		
		ВходныеПараметры = ВыборкаРезультат.ВходныеПараметры.Получить();
		Если ВходныеПараметры <> Неопределено Тогда
			
			Для Каждого Параметр Из ВходныеПараметры Цикл
				
				НоваяСтрокаПараметр = НоваяСтрока.ВходныеПараметры.Добавить();
				НоваяСтрокаПараметр.Параметр = Параметр;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаРегламентов.Сортировать("ПорядокВыполнения");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРегламентов

&НаКлиенте
Процедура ТаблицаРегламентовПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ТаблицаРегламентов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.Ручной Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРегламентовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ТаблицаРегламентов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекущиеДанные.Ручной = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	КомандаЗаписатьНаСервере();
	Закрыть(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаРегламентов.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаРегламентов.Запускать");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.НейтральноСерый);
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаписатьНаСервере()
	
	ТаблицаДляЗаписи = ТаблицаРегламентов.Выгрузить();
	ТаблицаДляЗаписи.Очистить();
	
	ТаблицаДляЗаписи.Колонки.Добавить("ВходныеПараметры", Новый ОписаниеТипов("ХранилищеЗначения"));
	
	Для Каждого Строка Из ТаблицаРегламентов Цикл
		
		НоваяСтрока = ТаблицаДляЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка, , "ВходныеПараметры");
		
		МассивПараметров = Строка.ВходныеПараметры.Выгрузить().ВыгрузитьКолонку("Параметр");
		Если МассивПараметров.Количество() > 0 Тогда
			НоваяСтрока.ВходныеПараметры = Новый ХранилищеЗначения(МассивПараметров);
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.Спец_НастройкиНочногоРасчета.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	НаборЗаписей.Загрузить(ТаблицаДляЗаписи);
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти
