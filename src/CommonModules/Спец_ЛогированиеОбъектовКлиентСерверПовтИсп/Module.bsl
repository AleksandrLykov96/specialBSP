// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Получить структуру информации по текущему компьютеру для записи.
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура - Получить структуру информации по текущему компьютеру для записи:
// * ВерсияОС - Строка - Версия ОС
// * ВерсияПриложения - Строка - Версия приложения 1С 
// * ИмяКомпьютера - Строка - Наименование компьютера
// * ИмяПользователя - Строка - Имя пользователя 1С
// * ИмяПользователяОперационнойСистемы - Строка - Имя пользователя ОС
// * ОперативнаяПамять - Число - Размер оперативной памяти (МБайт)
// * Процессор - Строка - Описание процессора
// * ТипКлиента - Строка - Тип клиента текущего вызова
// * ТипОперационнойСистемы - ПеречислениеСсылка.Спец_ОперационныеСистемы - ОС текущего вызова
// * НомерСеанса - Число - Номер текущего сеанса информационной базы
//
Функция ПолучитьСтруктуруИнформацииПоТекущемуКомпьютеруДляЗаписи() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	
	ИмяКомпьютера = Спец_ОбщегоНазначенияКлиентСервер.ПолучитьИмяКомпьютера(Истина); // Строка
	Если ПустаяСтрока(ИмяКомпьютера) Тогда
		ИмяКомпьютера = Спец_ОбщегоНазначенияКлиентСервер.ПолучитьИмяКомпьютера(, Истина);
	КонецЕсли;
	
	ИмяПользователяОС = Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользовательСистемы(Истина);
	Если ПустаяСтрока(ИмяПользователяОС) Тогда
		ИмяПользователяОС = Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользовательСистемы(, Истина);
	КонецЕсли;
	
	ТипОперационнойСистемы = Спец_ОбщегоНазначенияКлиентСервер.ПолучитьТипОС(Истина);
	Если Не ЗначениеЗаполнено(ТипОперационнойСистемы) Тогда
		ТипОперационнойСистемы = Спец_ОбщегоНазначенияКлиентСервер.ПолучитьТипОС(, Истина);
	КонецЕсли;
	
	СтруктураДляВозврата = Новый Структура();
	
	СтруктураДляВозврата.Вставить("ВерсияОС"                           , СистемнаяИнформация.ВерсияОС);
	СтруктураДляВозврата.Вставить("ВерсияПриложения"                   , СистемнаяИнформация.ВерсияПриложения);
	СтруктураДляВозврата.Вставить("ИмяКомпьютера"                      , ИмяКомпьютера);
	СтруктураДляВозврата.Вставить("ИмяПользователя"                    , Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1СПолноеИмя());
	СтруктураДляВозврата.Вставить("ИмяПользователяОперационнойСистемы" , ИмяПользователяОС);
	СтруктураДляВозврата.Вставить("ОперативнаяПамять"                  , СистемнаяИнформация.ОперативнаяПамять);
	СтруктураДляВозврата.Вставить("Процессор"                          , СистемнаяИнформация.Процессор);
	СтруктураДляВозврата.Вставить("ТипКлиента"                         , Спец_КомпонентаДополнительныеФункцииКлиентСервер.ПолучитьТипКлиента());
	СтруктураДляВозврата.Вставить("ТипОперационнойСистемы"             , ТипОперационнойСистемы);
	
#Если ТонкийКлиент Или ВебКлиент Или ТолстыйКлиентУправляемоеПриложение Тогда
	СтруктураДляВозврата.Вставить("НомерСеанса", Спец_ОбщегоНазначенияВызовСервера.ПолучитьНомерСеансаИнформационнойБазы());
#Иначе
	СтруктураДляВозврата.Вставить("НомерСеанса", НомерСеансаИнформационнойБазы());
#КонецЕсли
	
	//@skip-check constructor-function-return-section
	Возврат Новый ФиксированнаяСтруктура(СтруктураДляВозврата);
	
КонецФункции

#КонецОбласти
