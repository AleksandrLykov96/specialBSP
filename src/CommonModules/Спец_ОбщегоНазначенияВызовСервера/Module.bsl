// @strict-types
//@skip-check method-too-many-params

#Область ПрограммныйИнтерфейс

// См. Спец_ОбщегоНазначения.ЗаписатьОшибки
// 
// Параметры:
//  Источник - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.Источник
//  ТекстОшибкиИлиИнформацияОбОшибке - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.ТекстОшибкиИлиИнформацияОбОшибке
//  УровеньБазы - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.УровеньБазы
//  ТолькоЗаписьОшибки - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.ТолькоЗаписьОшибки
//  ИсключитьКэш - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.ИсключитьКэш
//  Скриншот - см. Спец_ОбщегоНазначения.ЗаписатьОшибки.Скриншот
Процедура ЗаписатьОшибки(Знач Источник, Знач ТекстОшибкиИлиИнформацияОбОшибке, Знач УровеньБазы = Неопределено, Знач ТолькоЗаписьОшибки = Ложь,
		Знач ИсключитьКэш = Ложь, Знач Скриншот = Неопределено) Экспорт
		
	Спец_ОбщегоНазначения.ЗаписатьОшибки(Источник, ТекстОшибкиИлиИнформацияОбОшибке, УровеньБазы, ТолькоЗаписьОшибки, ИсключитьКэш, Скриншот);
			
КонецПроцедуры

// См. Спец_ОбщегоНазначения.ПолучитьКлючЗаписиРегистраПоСтруктуреЗначений
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
//  СтруктураЗначений - см. Спец_ОбщегоНазначения.ПолучитьКлючЗаписиРегистраПоСтруктуреЗначений.СтруктураЗначений
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьКлючЗаписиРегистраПоСтруктуреЗначений
Функция ПолучитьКлючЗаписиРегистраПоСтруктуреЗначений(Знач ПолноеИмяОбъектаМетаданных, Знач СтруктураЗначений) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьКлючЗаписиРегистраПоСтруктуреЗначений(ПолноеИмяОбъектаМетаданных, СтруктураЗначений);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоФайловаяИнформационнаяБаза
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоФайловаяИнформационнаяБаза
Функция ЭтоФайловаяИнформационнаяБаза() Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЭтоФайловаяИнформационнаяБаза();
	
КонецФункции

// См. Спец_ОбщегоНазначения.СериализоватьОбъект
// 
// Параметры:
//  Объект - см. Спец_ОбщегоНазначения.СериализоватьОбъект.Объект
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.СериализоватьОбъект
Функция СериализоватьОбъект(Знач Объект) Экспорт
	
	Возврат Спец_ОбщегоНазначения.СериализоватьОбъект(Объект);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ДеСериализоватьОбъект
// 
// Параметры:
//  СтрокаXML - см. Спец_ОбщегоНазначения.ДеСериализоватьОбъект.СтрокаXML
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ДеСериализоватьОбъект
Функция ДеСериализоватьОбъект(Знач СтрокаXML) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ДеСериализоватьОбъект(СтрокаXML);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке
// 
// Параметры:
//  ИмяОбработкиИлиСсылка - см. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке.ИмяОбработкиИлиСсылка
//  ИмяФункцииИлиПроцедуры - см. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке.ИмяФункцииИлиПроцедуры
//  ЭтоПроцедура - см. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке.ЭтоПроцедура
//  МассивПараметров - см. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке.МассивПараметров
// 
// Возвращаемое значение:
//  - см. Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке
Функция ВызватьФункциюВоВнешнейОбработке(Знач ИмяОбработкиИлиСсылка, Знач ИмяФункцииИлиПроцедуры, Знач ЭтоПроцедура = Истина, Знач МассивПараметров = Неопределено) Экспорт
	
	// ++ Спец_БСП.ВнешниеОбработки
	Возврат Спец_ОбщегоНазначения.ВызватьФункциюВоВнешнейОбработке(ИмяОбработкиИлиСсылка, ИмяФункцииИлиПроцедуры, ЭтоПроцедура, МассивПараметров);
	// -- Спец_БСП.ВнешниеОбработки
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьКонтрольнуюСуммуСтрокой
// 
// Параметры:
//  Данные - см. Спец_ОбщегоНазначения.ПолучитьКонтрольнуюСуммуСтрокой.Данные
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьКонтрольнуюСуммуСтрокой
//
Функция ПолучитьКонтрольнуюСуммуСтрокой(Знач Данные) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьКонтрольнуюСуммуСтрокой(Данные);
	
КонецФункции

// См. Спец_ОбщегоНазначения.УстановитьКонстантуСпец
// 
// Параметры:
//  КодИлиСсылкаПВХ - см. Спец_ОбщегоНазначения.УстановитьКонстантуСпец.КодИлиСсылкаПВХ
//  Значение - см. Спец_ОбщегоНазначения.УстановитьКонстантуСпец.Значение
//  ХранитьИсторию - см. Спец_ОбщегоНазначения.УстановитьКонстантуСпец.ХранитьИсторию
Процедура УстановитьКонстантуСпец(Знач КодИлиСсылкаПВХ, Знач Значение, Знач ХранитьИсторию = Истина) Экспорт
	
	Спец_ОбщегоНазначения.УстановитьКонстантуСпец(КодИлиСсылкаПВХ, Значение, ХранитьИсторию);
	
КонецПроцедуры

// См. Спец_ОбщегоНазначения.ОбновлениеКонфигурации
Процедура ОбновлениеКонфигурации() Экспорт
	
	Спец_ОбщегоНазначения.ОбновлениеКонфигурации();
	
КонецПроцедуры

// См. Спец_ОбщегоНазначения.ЗапуститьДемонКластера
Процедура ЗапуститьДемонКластера() Экспорт
	
	Спец_ОбщегоНазначения.ЗапуститьДемонКластера();
	
КонецПроцедуры

#Область РаботаСМетаданнымиИТипами

// См. Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта
// Возвращает все сериализуемые поля (т.е. все, кроме "МенеджерОбъекта" и "МетаданныеОбъекта");
// 
//@skip-check invocation-parameter-type-intersect
// 
// Параметры:
//	Объект - см. Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта.Объект
// 
// Возвращаемое значение:
//	см. Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта
//
Функция ПолучитьСтруктуруИмениТипаДанныхОбъекта(Знач Объект) Экспорт
	
	СтруктураДляВозврата = Спец_РаботаСКоллекциямиКлиентСервер.СкопироватьСтруктуру(
			Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта(Объект));
	
	СтруктураДляВозврата.Удалить("МенеджерОбъекта");
	СтруктураДляВозврата.Удалить("МетаданныеОбъекта");
	
	//@skip-check constructor-function-return-section
	Возврат Новый ФиксированнаяСтруктура(СтруктураДляВозврата);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьТипРеквизитаВ1С
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
//  ИмяРеквизита - см. Спец_ОбщегоНазначения.ПолучитьТипРеквизитаВ1С.ИмяРеквизита
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьТипРеквизитаВ1С
Функция ПолучитьТипРеквизитаВ1С(Знач ПолноеИмяОбъектаМетаданных, Знач ИмяРеквизита) Экспорт

	Возврат Спец_ОбщегоНазначения.ПолучитьТипРеквизитаВ1С(ПолноеИмяОбъектаМетаданных, ИмяРеквизита);

КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьИмяМетаданныхПоТипу
// 
// Параметры:
//  ТипДляПроверки - см. Спец_ОбщегоНазначения.ПолучитьИмяМетаданныхПоТипу.ТипДляПроверки
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьИмяМетаданныхПоТипу
Функция ПолучитьИмяМетаданныхПоТипу(Знач ТипДляПроверки) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьИмяМетаданныхПоТипу(ТипДляПроверки);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЕстьГУИДВРеквизитах
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЕстьГУИДВРеквизитах
Функция ЕстьГУИДВРеквизитах(Знач ПолноеИмяОбъектаМетаданных) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЕстьГУИДВРеквизитах(ПолноеИмяОбъектаМетаданных);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьСтруктуруВсехРеквизитовОбъекта
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьСтруктуруВсехРеквизитовОбъекта
Функция ПолучитьСтруктуруВсехРеквизитовОбъекта(Знач ПолноеИмяОбъектаМетаданных) Экспорт
	
	//@skip-check constructor-function-return-section
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруВсехРеквизитовОбъекта(ПолноеИмяОбъектаМетаданных, Истина);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьМассивИменРеквизитовДляУникальностиЗаписиРегистра
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьМассивИменРеквизитовДляУникальностиЗаписиРегистра
Функция ПолучитьМассивИменРеквизитовДляУникальностиЗаписиРегистра(Знач ПолноеИмяОбъектаМетаданных) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьМассивИменРеквизитовДляУникальностиЗаписиРегистра(ПолноеИмяОбъектаМетаданных);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьМассивРеквизитовГдеУчаствуетОбъект
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьМассивРеквизитовГдеУчаствуетОбъект
Функция ПолучитьМассивРеквизитовГдеУчаствуетОбъект(Знач ПолноеИмяОбъектаМетаданных) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьМассивРеквизитовГдеУчаствуетОбъект(ПолноеИмяОбъектаМетаданных);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ПолучитьМассивИменТабличныхЧастей
// 
// Параметры:
//  ПолноеИмяОбъектаМетаданных - Строка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьМассивИменТабличныхЧастей
Функция ПолучитьМассивИменТабличныхЧастей(Знач ПолноеИмяОбъектаМетаданных) Экспорт

	Возврат Спец_ОбщегоНазначения.ПолучитьМассивИменТабличныхЧастей(ПолноеИмяОбъектаМетаданных);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоСсылочныйТип
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоСсылочныйТип.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоСсылочныйТип.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоСсылочныйТип
Функция ЭтоСсылочныйТип(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЭтоСсылочныйТип(ОбъектДляПроверки, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоСсылка
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоСсылка.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоСсылка.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоСсылка
Функция ЭтоСсылка(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЭтоСсылка(ОбъектДляПроверки, Неопределено, ТипОбъекта);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоСправочник
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоСправочник.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоСправочник.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоСправочник
Функция ЭтоСправочник(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоСправочник(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоДокумент
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоДокумент.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоДокумент.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоДокумент
Функция ЭтоДокумент(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоДокумент(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПеречисление
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПеречисление.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоПеречисление.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПеречисление
Функция ЭтоПеречисление(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоПеречисление(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПланВидовХарактеристик
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПланВидовХарактеристик.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоПланВидовХарактеристик.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПланВидовХарактеристик
Функция ЭтоПланВидовХарактеристик(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоПланВидовХарактеристик(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПланСчетов
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПланСчетов.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоПланСчетов.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПланСчетов
Функция ЭтоПланСчетов(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоПланСчетов(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПланВидовРасчета
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПланВидовРасчета.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоПланВидовРасчета.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПланВидовРасчета
Функция ЭтоПланВидовРасчета(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоПланВидовРасчета(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоБизнесПроцесс
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоБизнесПроцесс.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоБизнесПроцесс.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоБизнесПроцесс
Функция ЭтоБизнесПроцесс(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоБизнесПроцесс(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоЗадача
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоЗадача.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоЗадача.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоЗадача
Функция ЭтоЗадача(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоЗадача(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПланОбмена
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПланОбмена.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоПланОбмена.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПланОбмена
Функция ЭтоПланОбмена(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоПланОбмена(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоЖурналДокументов
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоЖурналДокументов.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоЖурналДокументов.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоЖурналДокументов
Функция ЭтоЖурналДокументов(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоЖурналДокументов(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоРегистр
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоРегистр.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоРегистр.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоРегистр
Функция ЭтоРегистр(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоРегистр(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоРегистрСведений
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоРегистрСведений.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоРегистрСведений.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоРегистрСведений
Функция ЭтоРегистрСведений(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоРегистрСведений(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоРегистрНакопления
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоРегистрНакопления.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоРегистрНакопления.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоРегистрНакопления
Функция ЭтоРегистрНакопления(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоРегистрНакопления(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоРегистрБухгалтерии
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоРегистрБухгалтерии.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоРегистрБухгалтерии.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоРегистрБухгалтерии
Функция ЭтоРегистрБухгалтерии(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоРегистрБухгалтерии(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоРегистрРасчета
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоРегистрРасчета.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоРегистрРасчета.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоРегистрРасчета
Функция ЭтоРегистрРасчета(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоРегистрРасчета(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоКонстанта
// 
// Параметры:
//  ОбъектДляПроверки - см. Спец_ОбщегоНазначения.ЭтоКонстанта.ОбъектДляПроверки
//  ТипОбъекта - см. Спец_ОбщегоНазначения.ЭтоКонстанта.ТипОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоКонстанта
Функция ЭтоКонстанта(Знач ОбъектДляПроверки, Знач ТипОбъекта = Неопределено) Экспорт

	Возврат Спец_ОбщегоНазначения.ЭтоКонстанта(ОбъектДляПроверки, Неопределено, ТипОбъекта);

КонецФункции

#КонецОбласти

#Область РаботаСОбъектамиБазы

// См. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке
// 
// Параметры:
//  НормальнаяСсылка - см. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке.НормальнаяСсылка
//  МассивДублейСсылки - см. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке.МассивДублейСсылки
//  МожноЧерезБД - см. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке.МожноЧерезБД
//  ТекстыОшибок - см. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке.ТекстыОшибок
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.УдалитьДублиПоСсылке
Функция УдалитьДублиПоСсылке(Знач НормальнаяСсылка, Знач МассивДублейСсылки, Знач МожноЧерезБД = Ложь, ТекстыОшибок = "") Экспорт
	
	Возврат Спец_ОбщегоНазначения.УдалитьДублиПоСсылке(НормальнаяСсылка, МассивДублейСсылки, Неопределено, МожноЧерезБД, ТекстыОшибок);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка
//  ИменаРеквизитов - см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта.ИменаРеквизитов
//  ВыбратьРазрешенные - см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта.ВыбратьРазрешенные
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта
Функция ЗначенияРеквизитовОбъекта(Знач Ссылка, Знач ИменаРеквизитов, Знач ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов, ВыбратьРазрешенные);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъекта
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка
//  ИмяРеквизита - см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъекта.ИмяРеквизита
//  ВыбратьРазрешенные - см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъекта.ВыбратьРазрешенные
//
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъекта
Функция ЗначениеРеквизитаОбъекта(Знач Ссылка, Знач ИмяРеквизита, Знач ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъектов
// 
// Параметры:
//  МассивСсылок - Массив из ЛюбаяСсылка
//  ИменаРеквизитов - см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъектов.ИменаРеквизитов
//  ВыбратьРазрешенные - см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъектов.ВыбратьРазрешенные
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъектов
Функция ЗначенияРеквизитовОбъектов(Знач МассивСсылок, Знач ИменаРеквизитов, Знач ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов, ВыбратьРазрешенные);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъектов
// 
// Параметры:
//  МассивСсылок - Массив из ЛюбаяСсылка
//  ИмяРеквизита - см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъектов.ИмяРеквизита
//  ВыбратьРазрешенные - см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъектов.ВыбратьРазрешенные
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъектов
Функция ЗначениеРеквизитаОбъектов(Знач МассивСсылок, Знач ИмяРеквизита, Знач ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные);
	
КонецФункции

// См. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно
// 
// Параметры:
//  МассивОбъектовДляПоиска - см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно.МассивОбъектовДляПоиска
//  МассивПолныхИменМетаданных - Массив из Строка
//  						   - ФиксированныйМассив из Строка
//  МассивПолныхИменМетаданныхДляИсключения - Массив из Строка
//  						   				- ФиксированныйМассив из Строка
//  КоличествоОграничениеЗаписейВЗапросе - см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно.КоличествоОграничениеЗаписейВЗапросе
//  ВозвращатьТолькоДанные - см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно.ВозвращатьТолькоДанные
//  КоличествоМетаданныхВОдномЗапросе - см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно.КоличествоМетаданныхВОдномЗапросе
//  ВключитьУпорядочиваниеДляСсылочных - см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно.ВключитьУпорядочиваниеДляСсылочных
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно
Функция НайтиПоСсылкамПрограммно(Знач МассивОбъектовДляПоиска, Знач МассивПолныхИменМетаданных = Неопределено, Знач МассивПолныхИменМетаданныхДляИсключения = Неопределено,
		Знач КоличествоОграничениеЗаписейВЗапросе = 65536, Знач ВозвращатьТолькоДанные = Ложь, Знач КоличествоМетаданныхВОдномЗапросе = 1024, 
		Знач ВключитьУпорядочиваниеДляСсылочных = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначения.НайтиПоСсылкамПрограммно(МассивОбъектовДляПоиска,
			МассивПолныхИменМетаданных,
			МассивПолныхИменМетаданныхДляИсключения,
			КоличествоОграничениеЗаписейВЗапросе,
			ВозвращатьТолькоДанные,
			КоличествоМетаданныхВОдномЗапросе,
			ВключитьУпорядочиваниеДляСсылочных);
	
КонецФункции

// См. Спец_ОбщегоНазначения.ЭтоПустаяИлиБитаяСсылка
// 
// Параметры:
//  СсылкаДляПроверки - см. Спец_ОбщегоНазначения.ЭтоПустаяИлиБитаяСсылка.СсылкаДляПроверки
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ЭтоПустаяИлиБитаяСсылка
Функция ЭтоПустаяИлиБитаяСсылка(Знач СсылкаДляПроверки) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ЭтоПустаяИлиБитаяСсылка(СсылкаДляПроверки);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращаемое значение:
//  Число
//
Функция ПолучитьНомерСеансаИнформационнойБазы() Экспорт
	
	Возврат НомерСеансаИнформационнойБазы();
	
КонецФункции

Процедура УстановитьПараметрыСервера() Экспорт
	
	СоответствиеДляУстановки = Новый Соответствие;
	
	СоответствиеДляУстановки["ОперационнаяСистемаСервер"]    = Спец_ОбщегоНазначенияКлиентСервер.РассчитатьТипОС();
	СоответствиеДляУстановки["ТекущийПользовательПолноеИмя"] = ПолноеИмяПользователя();
	СоответствиеДляУстановки["ИмяКомпьютераСервер"]          = ИмяКомпьютера();
	СоответствиеДляУстановки["ИмяПользователяОССервер"]      = Спец_ОбщегоНазначенияКлиентСервер.ВычислитьТекущегоПользователяСистемы(
			СоответствиеДляУстановки["ОперационнаяСистемаСервер"]);
	
	ПараметрыСеанса.Спец_ОбщиеЗначения = Новый ФиксированноеСоответствие(СоответствиеДляУстановки);
	
КонецПроцедуры

Процедура УстановитьТекущуюБазу() Экспорт
	
	БазаРезультат    = Неопределено;
	СтруктураСервера = Спец_ОбщегоНазначенияКлиентСервер.СтруктураИмениАдресаТипаБазыДанных();
	Кэш              = Спец_ПолучитьКэш();
	
	ВыборкаРезультат = ПолучитьВыборкуПоБазамПоКоду(СтруктураСервера.ИмяБазыИБ);
	Если ВыборкаРезультат.Следующий() Тогда
		
		БазаРезультат = ВыборкаРезультат.БазаРезультат;
		
		// Пытаемся заполнить числовым IP адрес базы
		Если ПустаяСтрока(ВыборкаРезультат.АдресСервераИБ)
			Или (Не Спец_СтроковыеФункцииКлиентСервер.ЭтоНеЛокальныйЧисловойIP(ВыборкаРезультат.АдресСервераИБ, Кэш)
					И Спец_СтроковыеФункцииКлиентСервер.ЭтоНеЛокальныйЧисловойIP(СтруктураСервера.ИмяСервераИБ, Кэш)) Тогда
			
			СправочникОбъект = Спец_ОбщегоНазначения.ПолучитьОбъектСБлокированием(БазаРезультат, Кэш);
			Если СправочникОбъект <> Неопределено Тогда
				
				СправочникОбъект.АдресСервераИБ = СтруктураСервера.ИмяСервераИБ;
				СправочникОбъект.ДополнительныеСвойства.Вставить("Спец_ПропуститьУстановкуГУИДа", Истина);
				
				Спец_ОбщегоНазначения.ЗаписатьОбъект(СправочникОбъект, , , , Кэш);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(БазаРезультат) Тогда
		
		СправочникОбъект = Справочники.Спец_Базы.СоздатьЭлемент();
		
		СправочникОбъект.Код            = СтруктураСервера.ИмяБазыИБ;
		СправочникОбъект.Наименование   = СтруктураСервера.ИмяБазыИБ;
		СправочникОбъект.АдресСервераИБ = СтруктураСервера.ИмяСервераИБ;
		СправочникОбъект.ВидБазы        = Перечисления.Спец_ВидыБаз.Остальное;
		СправочникОбъект.ТипБазыДанных  = ?(СтруктураСервера.ЭтоФайловаяБаза, Перечисления.Спец_ТипыБазыДанных.Файловая, Перечисления.Спец_ТипыБазыДанных.Неизвестный);
		
		СправочникОбъект.ДополнительныеСвойства.Вставить("Спец_ПропуститьУстановкуГУИДа", Истина);
		
		Спец_ОбщегоНазначения.ЗаписатьОбъект(СправочникОбъект, , , , Кэш);
		БазаРезультат = СправочникОбъект.Ссылка;
		
	КонецЕсли;
	
	ПараметрыСеанса.Спец_ТекущаяБаза = БазаРезультат;
	
КонецПроцедуры

// Параметры:
//  ДвоичныеДанныеДляЗаписи - ДвоичныеДанные
// 
// Возвращаемое значение:
//  Строка
Функция ЗаписатьДвоичныеДанныеВоВременныйФайл(Знач ДвоичныеДанныеДляЗаписи) Экспорт
	
	//@skip-check missing-temporary-file-deletion
	ИмяФайла = ПолучитьИмяВременногоФайла();
	ДвоичныеДанныеДляЗаписи.Записать(ИмяФайла);
	Возврат ИмяФайла;
	
КонецФункции

// Параметры:
//  ИмяПеременной - см. Спец_ОбщегоНазначения.УстановитьЗначениеПеременной.ИмяПеременной
//  ЗначениеДляУстановки - см. Спец_ОбщегоНазначения.УстановитьЗначениеПеременной.ЗначениеДляУстановки
Процедура УстановитьЗначениеПеременной(Знач ИмяПеременной, Знач ЗначениеДляУстановки) Экспорт
	
	Спец_ОбщегоНазначения.УстановитьЗначениеПеременной(ИмяПеременной, ЗначениеДляУстановки);
	
КонецПроцедуры

// Параметры:
//  СоответствиеДляУстановки - см. Спец_ОбщегоНазначения.УстановитьМассивЗначенийПеременных.СоответствиеДляУстановки
Процедура УстановитьМассивЗначенийПеременных(Знач СоответствиеДляУстановки) Экспорт
	
	Спец_ОбщегоНазначения.УстановитьМассивЗначенийПеременных(СоответствиеДляУстановки);
	
КонецПроцедуры

// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьСтруктуруУведомленияДляОтправкиТекущемуПользователю
Функция ПолучитьСтруктуруУведомленияДляОтправкиТекущемуПользователю() Экспорт
	
	//@skip-check constructor-function-return-section
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруУведомленияДляОтправкиТекущемуПользователю();
	
КонецФункции

// Возвращаемое значение:
//  ПеречислениеСсылка.Спец_РежимыОсновногоОкна
Функция ПолучитьРежимЗапускаТекущегоПользователя() Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.Спец_ТекущийПользователь) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		
		"ВЫБРАТЬ
		|	Спец_Пользователи.РежимЗапуска КАК РежимЗапуска
		|ИЗ
		|	Справочник.Спец_Пользователи КАК Спец_Пользователи
		|ГДЕ
		|	Спец_Пользователи.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.Спец_ТекущийПользователь);
		
		ВыборкаРезультат = Запрос.Выполнить().Выбрать();
		Если ВыборкаРезультат.Следующий() Тогда
			//@skip-check property-return-type
			Возврат ВыборкаРезультат.РежимЗапуска;
		Иначе
			Возврат Перечисления.Спец_РежимыОсновногоОкна.ПустаяСсылка();
		КонецЕсли;
		
	Иначе
		
		Возврат Перечисления.Спец_РежимыОсновногоОкна.ПустаяСсылка();
		
	КонецЕсли;
	
КонецФункции

// Параметры:
//  СоответствиеДляУстановки - см. Спец_ОбщегоНазначения.ПолучитьСтруктуруПараметровДляЗапуска.СоответствиеДляУстановки
//
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьСтруктуруПараметровДляЗапуска
//
Функция ПолучитьСтруктуруПараметровДляЗапуска(Знач СоответствиеДляУстановки) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруПараметровДляЗапуска(СоответствиеДляУстановки);
	
КонецФункции

// Параметры:
//  Объект1 - см. Спец_РаботаСКоллекциямиКлиентСервер.РазностьОбъектов.ОбъектУменьшаемое
//  Объект2 - см. Спец_РаботаСКоллекциямиКлиентСервер.РазностьОбъектов.ОбъектВычитаемое
//  ОписаниеТипов - см. Спец_РаботаСКоллекциямиКлиентСервер.РазностьОбъектов.ОписаниеТипов
// 
// Возвращаемое значение:
//  см. Спец_РаботаСКоллекциямиКлиентСервер.РазностьОбъектов
//
Функция РазностьОбъектов_ЧерезЗапрос(Знач Объект1, Знач Объект2, Знач ОписаниеТипов = Неопределено) Экспорт
	
	Возврат Спец_ОбщегоНазначения.РазностьОбъектов_ЧерезЗапрос(Объект1, Объект2, ОписаниеТипов);
	
КонецФункции

Процедура УстановитьКонстантыПоУмолчанию() Экспорт
	
	Спец_ОбщегоНазначения.УстановитьКонстантыПоУмолчанию();
	
КонецПроцедуры

// Параметры:
//  ПВХ - см. Спец_ОбщегоНазначения.ПолучитьМассовоеЗначениеПоПВХ.ПВХ
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьМассовоеЗначениеПоПВХ
Функция ПолучитьМассовоеЗначениеПоПВХ(Знач ПВХ) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьМассовоеЗначениеПоПВХ(ПВХ);
	
КонецФункции

// Параметры:
//  НаименованиеКомпоненты - см. Спец_ОбщегоНазначения.КомпонентаНеРаботаетУПользователя.НаименованиеКомпоненты
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.КомпонентаНеРаботаетУПользователя
//
Функция КомпонентаНеРаботаетУПользователя(Знач НаименованиеКомпоненты) Экспорт
	
	Возврат Спец_ОбщегоНазначения.КомпонентаНеРаботаетУПользователя(НаименованиеКомпоненты);
	
КонецФункции

// Параметры:
//  НаименованиеКомпоненты - см. Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентами.НаименованиеКомпоненты
//  КомпонентаНеРаботает - см. Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентами.КомпонентаНеРаботает
//  НомерВерсии - см. Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентами.НомерВерсии
//
Процедура УстановитьПараметрРаботыСКомпонентами(Знач НаименованиеКомпоненты, Знач КомпонентаНеРаботает, Знач НомерВерсии) Экспорт
	
	Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентами(НаименованиеКомпоненты, КомпонентаНеРаботает, НомерВерсии);
	
КонецПроцедуры

// Параметры:
//  МассивСтруктурКомпонент - см. Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентамиМассовый.МассивСтруктурКомпонент
//
Процедура УстановитьПараметрРаботыСКомпонентамиМассовый(Знач МассивСтруктурКомпонент) Экспорт
	
	Спец_ОбщегоНазначения.УстановитьПараметрРаботыСКомпонентамиМассовый(МассивСтруктурКомпонент);
	
КонецПроцедуры

// ++ Спец_БСП.ПодключаемоеОборудование
Процедура ОбновитьДрайвераПодключаемогоОборудования() Экспорт
	
	ОбновлениеИнформационнойБазыБПО.ОбновитьПоставляемыеДрайвера();
	ОбновлениеИнформационнойБазыБПО.ОбновитьСправочникДрайвера();
	ОбновлениеИнформационнойБазыБПО.ОбновитьПодключаемоеОборудование();
	ОбновлениеИнформационнойБазыБПО.ОбновитьШаблоныЭтикетокИЦенников();
	
	// Добавляем свои драйверы
	НужныйДрайвер = Справочники.ДрайверыОборудования.НайтиПоНаименованию("ШТРИХ-М: ККТ ручной работы (1.6.0-10) (https://github.com/shtrih-m/fr_drv_ng)");
	Если Не ЗначениеЗаполнено(НужныйДрайвер) Тогда
		ДрайверОбъект = Справочники.ДрайверыОборудования.СоздатьЭлемент();
	Иначе
		ДрайверОбъект = Спец_ОбщегоНазначения.ПолучитьОбъектСБлокированием(НужныйДрайвер); // СправочникОбъект.ДрайверыОборудования
	КонецЕсли;
	
	МетаданныеДрайвер = Метаданные.ОбщиеМакеты.Найти("Спец_ДрайверККТШтрихМ");
	Если МетаданныеДрайвер <> Неопределено Тогда
		
		ДрайверОбъект.Наименование         = "ШТРИХ-М: ККТ ручной работы (1.6.0-10) (https://github.com/shtrih-m/fr_drv_ng)";
		ДрайверОбъект.ТипОборудования      = Перечисления.ТипыПодключаемогоОборудования.ККТ;
		ДрайверОбъект.ИдентификаторОбъекта = "ShtrihM_fr_drv_ng_V1";
		ДрайверОбъект.ВерсияДрайвера       = "0.1.3.121";
		ДрайверОбъект.СпособПодключения    = Перечисления.СпособПодключенияДрайвера.ИзМакета;
		ДрайверОбъект.ИмяМакетаДрайвера    = МетаданныеДрайвер.Имя;
		
		Спец_ОбщегоНазначения.ЗаписатьОбъект(ДрайверОбъект);
		
	КонецЕсли;
	
КонецПроцедуры
// -- Спец_БСП.ПодключаемоеОборудование

Процедура ОбновитьСерверныйКэш() Экспорт
	
	Спец_ПолучитьКэш();
	
КонецПроцедуры

#Область ПовторноеИспользование

// Функция получает цвет стиля по имени элемента стиля.
//
// Параметры:
//   ИмяЦветаСтиля - Строка - имя элемента стиля.
//
// Возвращаемое значение:
//   Цвет
Функция ПолучитьЦветСтиля(ИмяЦветаСтиля) Экспорт
	
	Возврат ЦветаСтиля[ИмяЦветаСтиля];
	
КонецФункции

// Функция получает шрифт стиля по имени элемента стиля.
//
// Параметры:
//   ИмяШрифтаСтиля - Строка - имя шрифта стиля.
//
// Возвращаемое значение:
//   Шрифт
Функция ПолучитьШрифтСтиля(ИмяШрифтаСтиля) Экспорт
	
	Возврат ШрифтыСтиля[ИмяШрифтаСтиля];
	
КонецФункции

// См. Спец_ОбщегоНазначенияПовтИсп.ПодключитьВнешнююОбработку
//
// Параметры:
//  ИмяОбработкиИлиСсылка - см. Спец_ОбщегоНазначенияПовтИсп.ПодключитьВнешнююОбработку.ИмяОбработкиИлиСсылка
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ПодключитьВнешнююОбработку
Функция ПодключитьВнешнююОбработку(Знач ИмяОбработкиИлиСсылка) Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ПодключитьВнешнююОбработку(ИмяОбработкиИлиСсылка);
	
КонецФункции

// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ОписаниеТипаВсеСсылки
Функция ОписаниеТипаВсеСсылки() Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ОписаниеТипаВсеСсылки();
	
КонецФункции

// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ОписаниеТипаПеречисления
Функция ОписаниеТипаПеречисления() Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ОписаниеТипаПеречисления();
	
КонецФункции

// Параметры:
//  ИмяПеременной - см. Спец_ОбщегоНазначенияПовтИсп.ЗначениеПеременной.ИмяПеременной
//  ЧитатьИзКэша - Булево
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ЗначениеПеременной
Функция ЗначениеПеременной(Знач ИмяПеременной, Знач ЧитатьИзКэша = Истина) Экспорт
	
	Возврат ?(ЧитатьИзКэша,
			Спец_ОбщегоНазначенияПовтИсп.ЗначениеПеременной(ИмяПеременной),
			Спец_ОбщегоНазначения.ПолучитьЗначениеПеременной(ИмяПеременной));
	
КонецФункции

// Параметры:
//  КодИлиСсылкаПВХ - см. Спец_ОбщегоНазначения.ПолучитьКонстантуСпец.КодИлиСсылкаПВХ
//  ЗначениеПоУмолчанию - см. Спец_ОбщегоНазначения.ПолучитьКонстантуСпец.ЗначениеПоУмолчанию
//  НаДату - см. Спец_ОбщегоНазначения.ПолучитьКонстантуСпец.НаДату
//  ЧитатьИзКэша - Булево
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.ПолучитьКонстантуСпец
Функция ПолучитьКонстантуСпец(Знач КодИлиСсылкаПВХ, Знач ЗначениеПоУмолчанию = Неопределено, Знач НаДату = Неопределено, Знач ЧитатьИзКэша = Истина) Экспорт
	
	Возврат ?(ЧитатьИзКэша,
			Спец_ОбщегоНазначенияПовтИсп.ПолучитьКонстантуСпец(КодИлиСсылкаПВХ, ЗначениеПоУмолчанию, НаДату),
			Спец_ОбщегоНазначения.ПолучитьКонстантуСпец(КодИлиСсылкаПВХ, ЗначениеПоУмолчанию, НаДату));
	
КонецФункции

// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ИменаПодсистем
Функция ИменаПодсистем() Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ИменаПодсистем();
	
КонецФункции

// Параметры:
//  ИмяПараметра - см. Спец_ОбщегоНазначенияПовтИсп.ЗначениеПараметраСеанса.ИмяПараметра
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ЗначениеПараметраСеанса
Функция ЗначениеПараметраСеанса(Знач ИмяПараметра) Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ЗначениеПараметраСеанса(ИмяПараметра);
	
КонецФункции

// Параметры:
//  База - см. Спец_ОбщегоНазначенияПовтИсп.СтруктураПараметровБазы.База
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.СтруктураПараметровБазы
//
Функция СтруктураПараметровБазы(Знач База = Неопределено) Экспорт
	
	//@skip-check constructor-function-return-section
	Возврат Спец_ОбщегоНазначенияПовтИсп.СтруктураПараметровБазы(База);
	
КонецФункции

// Параметры:
//  ИсключитьПеречисления - см. Спец_ОбщегоНазначенияПовтИсп.ВсеИменаМетаданныхИзБазы.ИсключитьПеречисления
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ВсеИменаМетаданныхИзБазы
Функция ВсеИменаМетаданныхИзБазы(Знач ИсключитьПеречисления = Ложь) Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ВсеИменаМетаданныхИзБазы(ИсключитьПеречисления);
	
КонецФункции

// Параметры:
//  ПолноеИмяОбъекта - см. Спец_ОбщегоНазначенияПовтИсп.МассивИменПредопределенныхПоМетаданным.ПолноеИмяОбъекта
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.МассивИменПредопределенныхПоМетаданным
Функция МассивИменПредопределенныхПоМетаданным(Знач ПолноеИмяОбъекта) Экспорт
		
	Возврат Спец_ОбщегоНазначенияПовтИсп.МассивИменПредопределенныхПоМетаданным(ПолноеИмяОбъекта);
	
КонецФункции

// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияПовтИсп.ЭтоПользовательСПолнымиПравами
Функция ЭтоПользовательСПолнымиПравами() Экспорт

	Возврат Спец_ОбщегоНазначенияПовтИсп.ЭтоПользовательСПолнымиПравами();

КонецФункции

// Параметры:
//  КлючОбъекта - Строка
//  КлючНастроек - Строка
//  НастройкиДляСохранения - Структура, ФиксированнаяСтруктура -
//
Процедура ДополнитьПользовательскиеНастройкиФормыВХранилищеНастроек(Знач КлючОбъекта, Знач КлючНастроек, Знач НастройкиДляСохранения) Экспорт
	
	Спец_ОбщегоНазначения.ДополнитьПользовательскиеНастройкиФормыВХранилищеНастроек(КлючОбъекта, КлючНастроек, НастройкиДляСохранения);
	
КонецПроцедуры

// См. Спец_ОбщегоНазначенияКлиентСервер.ЗаголовкиДляHTTPЗапросовПоУмолчанию
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияКлиентСервер.ЗаголовкиДляHTTPЗапросовПоУмолчанию
//
Функция ЗаголовкиДляHTTPЗапросовПоУмолчанию() Экспорт
	
	Возврат Спец_ОбщегоНазначенияПовтИсп.ЗаголовкиДляHTTPЗапросовПоУмолчанию();
	
КонецФункции

#КонецОбласти

#Область ЧертовВебКлиент

// См. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуПоJSON
//
// Параметры:
//  Объект - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуПоJSON.Объект
//  ДляПредставленияПользователю - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуПоJSON.ДляПредставленияПользователю
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуПоJSON
Функция ПолучитьСтрокуПоJSON(Знач Объект, Знач ДляПредставленияПользователю = Истина) Экспорт
	
	Возврат Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСтрокуПоJSON(Объект, ДляПредставленияПользователю);
	
КонецФункции

// См. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON
//
// Параметры:
//  ВходныеДанные - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON.ВходныеДанные
//  ЧитатьИзФайла - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON.ЧитатьИзФайла
//  ВСоответствие - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON.ВСоответствие
//  КодировкаДляЧтения - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON.КодировкаДляЧтения
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON
//
Функция ПолучитьСоответствиеJSON(Знач ВходныеДанные, Знач ЧитатьИзФайла = Ложь, Знач ВСоответствие = Истина,
		Знач КодировкаДляЧтения = "UTF-8") Экспорт
	
	//@skip-check constructor-function-return-section
	Возврат Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеJSON(ВходныеДанные, ЧитатьИзФайла, ВСоответствие, КодировкаДляЧтения);
	
КонецФункции

// См. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML
//
// Параметры:
//  ВходныеДанные - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.ВходныеДанные
//  ЧитатьИзФайла - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.ЧитатьИзФайла
//  ВСоответствие - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.ВСоответствие
//  ПараметрыЧтенияXML - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.ПараметрыЧтенияXML
//  НаборСхемXML - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.НаборСхемXML
//  КодировкаДляЧтения - см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML.КодировкаДляЧтения
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML
//
Функция ПолучитьСоответствиеXML(Знач ВходныеДанные, Знач ЧитатьИзФайла = Ложь, Знач ВСоответствие = Истина,
		Знач ПараметрыЧтенияXML = Неопределено, Знач НаборСхемXML = Неопределено, Знач КодировкаДляЧтения = "UTF-8") Экспорт
	
	//@skip-check constructor-function-return-section
	Возврат Спец_ОбщегоНазначенияКлиентСервер.ПолучитьСоответствиеXML(ВходныеДанные, ЧитатьИзФайла, ВСоответствие, ПараметрыЧтенияXML, НаборСхемXML, КодировкаДляЧтения);
	
КонецФункции

// См. Спец_ОбщегоНазначенияКлиентСервер.ОтправитьСообщениеВТелеграм
// 
// Параметры:
//  ТекстСообщенияДляОтправки - см. Спец_ОбщегоНазначенияКлиентСервер.ОтправитьСообщениеВТелеграм.ТекстСообщенияДляОтправки
//  ТипПарсинга - см. Спец_ОбщегоНазначенияКлиентСервер.ОтправитьСообщениеВТелеграм.ТипПарсинга
//  ТекстОшибки - см. Спец_ОбщегоНазначенияКлиентСервер.ОтправитьСообщениеВТелеграм.ТекстОшибки
Процедура ОтправитьСообщениеВТелеграм(Знач ТекстСообщенияДляОтправки, Знач ТипПарсинга = "", ТекстОшибки = "") Экспорт
	
	Спец_ОбщегоНазначенияКлиентСервер.ОтправитьСообщениеВТелеграм(ТекстСообщенияДляОтправки, ТипПарсинга, ТекстОшибки);
	
КонецПроцедуры

// См. Спец_ОбщегоНазначения.XMLСтрокаПрограммно
// 
// Параметры:
//  ЗначениеДляПреобразования - см. Спец_ОбщегоНазначения.XMLСтрокаПрограммно.ЗначениеДляПреобразования
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.XMLСтрокаПрограммно
Функция XMLСтрокаПрограммно(Знач ЗначениеДляПреобразования) Экспорт
	
	Возврат Спец_ОбщегоНазначения.XMLСтрокаПрограммно(ЗначениеДляПреобразования);
	
КонецФункции

// См. Спец_ОбщегоНазначения.XMLЗначениеПрограммно
// 
// Параметры:
//	ТипДляПреобразования - см. Спец_ОбщегоНазначения.XMLЗначениеПрограммно.ТипДляПреобразования
//  СтрокаXML - см. Спец_ОбщегоНазначения.XMLЗначениеПрограммно.СтрокаXML
// 
// Возвращаемое значение:
//  см. Спец_ОбщегоНазначения.XMLЗначениеПрограммно
Функция XMLЗначениеПрограммно(Знач ТипДляПреобразования, Знач СтрокаXML) Экспорт
	
	Возврат Спец_ОбщегоНазначения.XMLЗначениеПрограммно(ТипДляПреобразования, СтрокаXML);
	
КонецФункции

#КонецОбласти

#Область ДанныеИзБД

// Параметры:
//  КодТаблицы - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.ПолучитьНаименованиеТаблицыВ1СПоКоду.КодТаблицы
// 
// Возвращаемое значение:
//  см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.ПолучитьНаименованиеТаблицыВ1СПоКоду
//
Функция ПолучитьИмяТаблицыВ1СПоКодуЧерез1С(Знач КодТаблицы) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьИмяТаблицыВ1СПоКодуЧерез1С(КодТаблицы);
	
КонецФункции

// Параметры:
//  ПолноеИмя - Строка
// 
// Возвращаемое значение:
//  см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.ПолучитьИмяТаблицыИзБД
//
Функция ПолучитьИмяТаблицыИзБДЧерез1С(Знач ПолноеИмя) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьИмяТаблицыИзБДЧерез1С(ПолноеИмя);
	
КонецФункции

// Параметры:
//  ПолноеИмя - Строка
//  ИмяРеквизита - Строка
// 
// Возвращаемое значение:
//  см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.ПолучитьИмяРеквизитаИзБД
//
Функция ПолучитьИмяРеквизитаИзБДЧерез1С(Знач ПолноеИмя, Знач ИмяРеквизита) Экспорт
	
	Возврат Спец_ОбщегоНазначения.ПолучитьИмяРеквизитаИзБДЧерез1С(ПолноеИмя, ИмяРеквизита);
	
КонецФункции

// Параметры:
//  ИсходныеДанные - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.НайтиСоздатьОбъектыРегистра.ИсходныеДанные
//  СтруктураПараметров - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.НайтиСоздатьОбъектыРегистра.СтруктураПараметров
//  ТекстыОшибок - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.НайтиСоздатьОбъектыРегистра.ТекстОшибок
//
Процедура НайтиСоздатьОбъектыРегистраЧерез1С(Знач ИсходныеДанные, Знач СтруктураПараметров, ТекстыОшибок = "") Экспорт
	
	Спец_ОбщегоНазначения.НайтиСоздатьОбъектыРегистраЧерез1С(ИсходныеДанные, СтруктураПараметров, ТекстыОшибок);
	
КонецПроцедуры

// Параметры:
//  ИсходныеДанные - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.УдалитьДанныеПоОбъекту1СВБазеДанных.ИсходныеДанные
//  ПолноеИмя - Строка
//  ТекстыОшибок - Строка - см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.УдалитьДанныеПоОбъекту1СВБазеДанных.ТекстОшибок
//
Процедура УдалитьДанныеПоОбъекту1СВБазеДанныхЧерез1С(Знач ИсходныеДанные, Знач ПолноеИмя, ТекстыОшибок = "") Экспорт
	
	Спец_ОбщегоНазначения.УдалитьДанныеПоОбъекту1СВБазеДанныхЧерез1С(ИсходныеДанные, ПолноеИмя, ТекстыОшибок);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//  Код - Строка
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса:
//		* БазаРезультат - СправочникСсылка.Спец_Базы
//		* АдресСервераИБ - Строка
Функция ПолучитьВыборкуПоБазамПоКоду(Знач Код)

	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СправочникБазы.Ссылка КАК БазаРезультат,
	|	СправочникБазы.АдресСервераИБ КАК АдресСервераИБ
	|ИЗ
	|	Справочник.Спец_Базы КАК СправочникБазы
	|ГДЕ
	|	СправочникБазы.Код = &Код
	|	И НЕ СправочникБазы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Код", Код);
	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти
