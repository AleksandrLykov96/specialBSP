
// @strict-types
#Область СлужебныйПрограммныйИнтерфейс

//@skip-check constructor-function-return-section
//@skip-check structure-consructor-too-many-keys
//
// Параметры:
//	ПолноеИмяМетаданныхВ1С - Строка
// 
// Возвращаемое значение:
//	см. Спец_РаботаСБазойДанныхНапрямуюКлиентСервер.ПодготовитьСтруктуруПараметровДляЗаписиНапрямую
//
Функция ПодготовитьСтруктуруПараметровДляЗаписиВPostgreSQL(Знач ПолноеИмяМетаданныхВ1С) Экспорт
	
	Кэш = Спец_ПолучитьКэш();
	
	СтруктураТаблицыВБД = Спец_PostgreSQLВызовСервераПовтИсп.ПолучитьСтруктуруТаблицыПоИмениМетаданных(ПолноеИмяМетаданныхВ1С);
	
	// Основной тип метаданных для получения типа ссылки. Если не нашли нужный тип - нет такой таблицы в 1С
	ЧистоеИмяМетаданныхДляТипа = ПолноеИмяМетаданныхВ1С;
	
	МассивРазделенный = СтрРазделить(ПолноеИмяМетаданныхВ1С, ".");
	Если МассивРазделенный.Количество() > 2 Тогда
		ЧистоеИмяМетаданныхДляТипа = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
	КонецЕсли;
	
	СтруктураТаблицыВ1С = Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта(ЧистоеИмяМетаданныхДляТипа, Кэш);
	Если ПустаяСтрока(СтруктураТаблицыВ1С.ПолноеИмяОбъекта) Тогда
		
		НаименованиеВБД       = "";
		ИмяМетаданныхВ1С      = "";
		ТипВ1С                = Тип("Неопределено");
		МассивТабличныхЧастей = Новый Массив(); // Массив из Строка
		
	Иначе
		
		НаименованиеВБД       = СтруктураТаблицыВБД.НаименованиеВPostgreSQL;
		ИмяМетаданныхВ1С      = ПолноеИмяМетаданныхВ1С;
		ТипВ1С                = СтруктураТаблицыВ1С.Тип;
		МассивТабличныхЧастей = Спец_ОбщегоНазначения.ПолучитьМассивИменТабличныхЧастей(СтруктураТаблицыВ1С.МетаданныеОбъекта, Кэш);
		
	КонецЕсли;
	
	Возврат Спец_РаботаСКоллекциямиКлиентСервер.СкопироватьСтруктуру(Новый Структура(
					"НаименованиеВБД,
					|ИмяМетаданныхВ1С,
					|ТипВ1С,
					|ПоляДляСвязи,
					|ПоляДляПроверкиКонфликтов,
					|ИмяПоляГУИДа,
					|ДополнительныеПоляДляВозврата,
					|ТипОбновления,
					|ВозвращатьРезультат,
					|МассивИменТабличныхЧастей,
					|ПринудительноВозвращатьВсеЗаписи",
					
					НаименованиеВБД,
					ИмяМетаданныхВ1С,
					ТипВ1С,
					Новый Массив(),
					Новый Массив(),
					"",
					Новый Массив(),
					ПредопределенноеЗначение("Перечисление.Спец_ТипыОбновленияТаблицыБазыДанных.НайтиОбновлятьСоздавать"),
					Истина,
					МассивТабличныхЧастей,
					Ложь),
			
			Истина);
	
КонецФункции

// См. Спец_PostgreSQL.ПолучитьСтруктуруТаблицыПоИмениМетаданных
// 
// Параметры:
//	НаименованиеВ1С - см. Спец_PostgreSQL.ПолучитьСтруктуруТаблицыПоИмениМетаданных.НаименованиеВ1С
//	НазначениеТаблицы - см. Спец_PostgreSQL.ПолучитьСтруктуруТаблицыПоИмениМетаданных.НазначениеТаблицы
// 
// Возвращаемое значение:
//	см. Спец_PostgreSQL.ПолучитьСтруктуруТаблицыПоИмениМетаданных
//
Функция ПолучитьСтруктуруТаблицыПоИмениМетаданных(Знач НаименованиеВ1С, Знач НазначениеТаблицы = "Основная") Экспорт

	//@skip-check constructor-function-return-section
	Возврат Спец_PostgreSQL.ПолучитьСтруктуруТаблицыПоИмениМетаданных(НаименованиеВ1С, НазначениеТаблицы);

КонецФункции

// Соответствие предопределённых данных и ГУИДов в PostgreSQL.
// 
// Возвращаемое значение:
//	ФиксированноеСоответствие из КлючИЗначение:
//		* Ключ - ЛюбаяСсылка - Ссылка на предопределённый объект
//		* Значение - Строка - ГУИД элемента в базе данных
//
Функция ПолучитьСоответствиеПредопределенныхДанныхИГУИДов() Экспорт

	СоответствиеРезультат = Новый Соответствие();

	ВыборкаРезультат = ПолучитьДанныеПоПредопределеннымОбъектамИИхГУИДами();
	Пока ВыборкаРезультат.Следующий() Цикл
		СоответствиеРезультат[ВыборкаРезультат.ПредопределенныйОбъект] = ВыборкаРезультат.ГУИДВБазеДанных;
	КонецЦикла;
	Возврат Новый ФиксированноеСоответствие(СоответствиеРезультат);

КонецФункции

// Имя столбца в PostgreSQL по имени колонки в 1С.
// 
// Параметры:
//	ИмяМетаданныхТаблицыВ1С - Строка - Имя метаданных таблицы в 1С
//	ИмяПоля - Строка - Имя поля в 1С
//	ТипСоставногоПоля - Неопределено, ПеречислениеСсылка.Спец_ТипыСоставныхПолейБазыДанных - Тип составного поля
// 
// Возвращаемое значение:
//  Строка - Имя столбца в PostgreSQL
//
Функция ПолучитьИмяПоляВPostgreSQLПоИмениВ1С(Знач ИмяМетаданныхТаблицыВ1С, Знач ИмяПоля, Знач ТипСоставногоПоля = Неопределено) Экспорт
	
	Возврат Спец_PostgreSQLКлиентСервер.ПолучитьИмяПоляВPostgreSQLПоИмениВ1С(ИмяМетаданныхТаблицыВ1С, ИмяПоля, ТипСоставногоПоля);
	
КонецФункции

// Получить ГУИД предопределенного элемента в PostgreSQL.
// 
// Параметры:
//	ПредопределенныйЭлемент - ЛюбаяСсылка - Предопределенный элемент, для которого нужно получить ГУИД в PostgreSQL
// 
// Возвращаемое значение:
//	Строка - ГУИД объекта
//
Функция ПолучитьГУИДПредопределенногоЭлементаВPostgreSQL(Знач ПредопределенныйЭлемент) Экспорт

	СоответствиеОбъектов = Спец_PostgreSQLВызовСервераПовтИсп.ПолучитьСоответствиеПредопределенныхДанныхИГУИДов();
	Возврат Спец_РаботаСКоллекциямиКлиентСервер.СвойствоСоответствия(СоответствиеОбъектов, ПредопределенныйЭлемент, "");

КонецФункции

// Получить предопределённый элемент по ГУИДу в базе.
// 
// Параметры:
//  ГУИДЭлемента - Строка - ГУИД элемента
// 
// Возвращаемое значение:
//  ЛюбаяСсылка - Предопределённый объект по ГУИДу
//
Функция ПолучитьПредопределенныйЭлементПоГУИДуВБазе(Знач ГУИДЭлемента) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктураТаблицБазыДанныхПредопределенныеДанные.ЭлементСсылка КАК ЭлементСсылка
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицБазыДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спец_СтруктураТаблицБазыДанных.ПредопределенныеДанные КАК СтруктураТаблицБазыДанныхПредопределенныеДанные
	|		ПО СтруктураТаблицБазыДанных.Ссылка = СтруктураТаблицБазыДанныхПредопределенныеДанные.Ссылка
	|ГДЕ
	|	СтруктураТаблицБазыДанныхПредопределенныеДанные.ГУИДВБазеДанных = &ГУИДВБазеДанных
	|	И НЕ СтруктураТаблицБазыДанных.ПометкаУдаления";

	Запрос.УстановитьПараметр("ГУИДВБазеДанных", ГУИДЭлемента);

	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруПервойВыборкиЗапроса(Запрос, "ЭлементСсылка");

КонецФункции

// Получить наименование таблицы в 1С по коду в БД.
// 
// Параметры:
//  КодТаблицы - Число - Код таблицы в БД
// 
// Возвращаемое значение:
//  Строка - Наименование таблицы
//
Функция ПолучитьНаименованиеТаблицыПоКоду(Знач КодТаблицы) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спец_СтруктураТаблицБазыДанных.НаименованиеВ1С КАК НаименованиеВ1С
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК Спец_СтруктураТаблицБазыДанных
	|ГДЕ
	|	Спец_СтруктураТаблицБазыДанных.Код = &Код
	|	И НЕ Спец_СтруктураТаблицБазыДанных.ПометкаУдаления";

	Запрос.УстановитьПараметр("Код", КодТаблицы);

	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруПервойВыборкиЗапроса(Запрос, "НаименованиеВ1С");

КонецФункции

// Параметры:
//  ПолноеИмяМетаданныхДокумента - Строка
// 
// Возвращаемое значение:
//  Дата
//
Функция ПолучитьПеридичностьНумерацииДокумента(Знач ПолноеИмяМетаданныхДокумента) Экспорт
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданныхДокумента); // ОбъектМетаданныхДокумент
	Если МетаданныеДокумента <> Неопределено И Спец_ОбщегоНазначения.ЭтоДокумент(МетаданныеДокумента) Тогда
		
		Если МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Год Тогда
			Возврат НачалоГода(ТекущаяДата);
		ИначеЕсли МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.День Тогда
			Возврат НачалоДня(ТекущаяДата);
		ИначеЕсли МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Квартал Тогда
			Возврат НачалоКвартала(ТекущаяДата);
		ИначеЕсли МетаданныеДокумента.ПериодичностьНомера = Метаданные.СвойстваОбъектов.ПериодичностьНомераДокумента.Месяц Тогда
			Возврат НачалоМесяца(ТекущаяДата);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Дата(1, 1, 1);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
//	ВыборкаИзРезультатаЗапроса:
//		* ПредопределенныйОбъект - ЛюбаяСсылка
//		* ГУИДВБазеДанных - Строка
//
Функция ПолучитьДанныеПоПредопределеннымОбъектамИИхГУИДами()

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураТаблицPostgreSQLПредопределенныеДанные.ЭлементСсылка КАК ПредопределенныйОбъект,
	|	СтруктураТаблицPostgreSQLПредопределенныеДанные.ГУИДВБазеДанных КАК ГУИДВБазеДанных
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицБазыДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спец_СтруктураТаблицБазыДанных.ПредопределенныеДанные КАК
	|			СтруктураТаблицPostgreSQLПредопределенныеДанные
	|		ПО СтруктураТаблицБазыДанных.Ссылка = СтруктураТаблицPostgreSQLПредопределенныеДанные.Ссылка
	|ГДЕ
	|	НЕ СтруктураТаблицБазыДанных.ПометкаУдаления";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

#КонецОбласти