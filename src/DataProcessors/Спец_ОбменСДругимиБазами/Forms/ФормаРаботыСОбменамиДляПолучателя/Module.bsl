
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Заполняем список баз для выбора
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Спец_ОбъектыДляРегистрацииДляОбменов.База КАК База
	|ИЗ
	|	РегистрСведений.Спец_ОбъектыДляРегистрацииДляОбменов КАК Спец_ОбъектыДляРегистрацииДляОбменов";
	
	МассивВозможныхБаз = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("База");
	Если МассивВозможныхБаз.Количество() = 0 Тогда
		ВызватьИсключение "Не настроены обмены ни с одной базой!";
	КонецЕсли;
	
	Элементы.База.СписокВыбора.ЗагрузитьЗначения(МассивВозможныхБаз);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьНужныеТипыДанныхДляОбъекта();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БазаПриИзменении(Элемент)
	
	УстановитьНужныеТипыДанныхДляОбъекта();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗарегистрированныеОбъекты

&НаСервереБезКонтекста
Процедура СписокЗарегистрированныеОбъектыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого СтрокаДС Из Строки Цикл
		СтрокаДС.Значение.Данные.ДатаИзменения = Спец_ОбщегоНазначенияКлиентСервер.UnixTimestampВДату(СтрокаДС.Значение.Данные.UnixTimestamp);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗарегистрироватьОбъект(Команда)
	
	ЗарегистрироватьОбъектНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьСРегистрацииОбъект(Команда)
	
	СнятьСРегистрацииОбъектНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНужныеТипыДанныхДляОбъекта()
	
	ОбъектДляРегистрации = Неопределено;
	Элементы.ОбъектДляРегистрации.ДоступныеТипы   = Новый ОписаниеТипов("Строка");
	Элементы.ОбъектДляРегистрации.ОграничениеТипа = Новый ОписаниеТипов("Строка");
	
	Спец_ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокЗарегистрированныеОбъекты,
			"База",
			Объект.База,
			ВидСравненияКомпоновкиДанных.Равно,
			"База",
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный,
			Спец_СтроковыеФункцииКлиентСервер.ПолучитьУникальныйИдентификатор());
	
	Если Не ЗначениеЗаполнено(Объект.База) Тогда
		Возврат;
	КонецЕсли;
	
	Кэш = Спец_ПолучитьКэш();
	МассивТипов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Спец_ОбъектыДляРегистрацииДляОбменов.ПолноеИмяОбъектаМетаданных КАК ПолноеИмяОбъектаМетаданных
	|ИЗ
	|	РегистрСведений.Спец_ОбъектыДляРегистрацииДляОбменов КАК Спец_ОбъектыДляРегистрацииДляОбменов
	|ГДЕ
	|	Спец_ОбъектыДляРегистрацииДляОбменов.База = &База";
	
	Запрос.УстановитьПараметр("База", Объект.База);
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	Пока ВыборкаРезультат.Следующий() Цикл
		
		СтруктураПоМетаданным = Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта(ВыборкаРезультат.ПолноеИмяОбъектаМетаданных, Кэш);
		Если СтруктураПоМетаданным.МетаданныеОбъекта <> Неопределено
			И Спец_ОбщегоНазначения.ЭтоСсылка(СтруктураПоМетаданным.ПолноеИмяОбъекта, Кэш, Тип("Строка"))
			И Не Спец_ОбщегоНазначения.ЭтоПеречисление(СтруктураПоМетаданным.ПолноеИмяОбъекта, Кэш, Тип("Строка")) Тогда
			
			МассивТипов.Добавить(ТипЗнч(СтруктураПоМетаданным.МенеджерОбъекта.ПустаяСсылка()));
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ОбъектДляРегистрации.ДоступныеТипы   = Новый ОписаниеТипов(МассивТипов);
	Элементы.ОбъектДляРегистрации.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
	
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьОбъектНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Кэш = Спец_ПолучитьКэш();
	
	СтруктураМетаданных = Спец_ОбщегоНазначения.ПолучитьСтруктуруИмениТипаДанныхОбъекта(ОбъектДляРегистрации, Кэш);
	
	ЛокальныйТекстОшибок = "";
	Спец_ОбменСДругимиБазами.ЗарегистрироватьОбъекты_ПоОбъекту(Ложь, Объект.База, ОбъектДляРегистрации, СтруктураМетаданных.ПолноеИмяОбъекта, , ЛокальныйТекстОшибок, Кэш);
	
	Если Не ПустаяСтрока(ЛокальныйТекстОшибок) Тогда
		ВызватьИсключение ЛокальныйТекстОшибок;
	Иначе
		Спец_ОбщегоНазначения.СообщитьПользователю("Успешно", , , , , УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СнятьСРегистрацииОбъектНаСервере()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Кэш = Спец_ПолучитьКэш();
	
	ЛокальныйТекстОшибок = "";
	Спец_ОбменСДругимиБазами.СнятьСРегистрацииОбъекты_ПоОбъекту(Ложь, Объект.База, ОбъектДляРегистрации, , ЛокальныйТекстОшибок, Кэш);
	
	Если Не ПустаяСтрока(ЛокальныйТекстОшибок) Тогда
		ВызватьИсключение ЛокальныйТекстОшибок;
	Иначе
		Спец_ОбщегоНазначения.СообщитьПользователю("Успешно", , , , , УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
