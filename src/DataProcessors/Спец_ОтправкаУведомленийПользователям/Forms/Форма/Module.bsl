
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Спец_ПолучитьКонстанту(ПланыВидовХарактеристик.Спец_Константы.ВключитьУведомленияПользователей, Ложь) <> Истина Тогда
		ВызватьИсключение "Уведомления отключены! Необходимо включить (в константах).";
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Для Каждого Пользователь Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		СписокПользователей.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
	КонецЦикла;
	
	СписокПользователей.СортироватьПоЗначению();
	
	Отправитель    = Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1СПолноеИмя();
	ТипУведомления = Перечисления.Спец_ТипыУведомленийПользователя.Оповещение1С;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОтметитьТолькоАктивных(Команда)
	
	// ++ Спец_БСП.Версия1С_14_ВышеИлиРавно
	СписокПользователей.ЗаполнитьПометки(Ложь);
	
	// При повторном использовании пишет для новых пользователей "Пользователь ИБ не идентифицирован".
	// Поэтому через кластер
	ТекущийПользователь = Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1С();
	
	ТекущаяБаза = Спец_ОбщегоНазначенияКлиентСервер.ПодключитьсяКБазеВКластере();
	Для Каждого Сеанс Из ТекущаяБаза.ПолучитьСеансы() Цикл
		
		Если Сеанс.ИмяПользователя = ТекущийПользователь Или Не СтрНачинаетсяС(ВРег(Сеанс.ИмяПриложения), "1CV8") Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписка = СписокПользователей.НайтиПоЗначению(Сеанс.ИмяПользователя);
		Если СтрокаСписка <> Неопределено Тогда
			СтрокаСписка.Пометка = Истина;
		КонецЕсли;
		
	КонецЦикла;
	// -- Спец_БСП.Версия1С_14_ВышеИлиРавно
	
	// ++ Спец_БСП.Версия1С_14_Ниже
	////ВызватьИсключение "Недоступно!";
	// -- Спец_БСП.Версия1С_14_Ниже
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьУведомления(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	КомандаОтправитьУведомленияНаСервере();
	
	//@skip-check empty-except-statement
	Попытка
		Элементы.СписокНепрочитанныхУведомлений.Обновить();
	Исключение
	КонецПопытки;
	
	Спец_ОбщегоНазначенияКлиент.СообщитьПользователю("Успешно", , , , , УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных(Элементы.СписокПользователей.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("СписокПользователей.Значение");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1С();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр" , Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт"          , ШрифтыСтиля.Спец_ШрифтВыделениеЖирным);
	
КонецПроцедуры

&НаСервере
Процедура КомандаОтправитьУведомленияНаСервере()
	
	ТекущаяДата = Спец_ОбщегоНазначенияКлиентСервер.ТекущаяДатаПоНормальному();
	Для Каждого СтрокаСписка Из СписокПользователей Цикл
		
		Если Не СтрокаСписка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.Спец_УведомленияДляПользователей.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Период.Установить(ТекущаяДата);
		НаборЗаписей.Отбор.ИмяПользователя.Установить(СтрокаСписка.Представление);
		
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Период          = ТекущаяДата;
		НоваяЗапись.ИмяПользователя = СтрокаСписка.Представление;
		НоваяЗапись.Отправитель     = Отправитель;
		НоваяЗапись.ТекстСообщения  = ТекстСообщения;
		НоваяЗапись.ТипУведомления  = ТипУведомления;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
