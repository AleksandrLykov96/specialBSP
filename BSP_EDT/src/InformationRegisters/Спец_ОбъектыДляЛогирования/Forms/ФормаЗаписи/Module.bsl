
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда     
		Возврат;
	КонецЕсли;
	
	Спец_РаботаСФормами.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	ЗаполнитьСписокВыбораДляОбъекта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Спец_РаботаСФормамиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Спец_РаботаСФормамиКлиент.ПриЗакрытии(ЭтотОбъект, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяМетаданныхАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Спец_РаботаСФормамиКлиент.АвтоПодборТекстаИзСпискаВыбораСтрок(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

// ++ Спец_БСП.Спец_ЛогированиеОбъектов
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОткрытьЛогиПоОбъекту(Команда)
	
	Спец_ЛогированиеОбъектовКлиент.ОткрытьЛогиПоОбъекту(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
// -- Спец_БСП.Спец_ЛогированиеОбъектов

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораДляОбъекта()
	
	Элементы.ИмяМетаданных.СписокВыбора.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	
	// 0. Пользователи
	Для Каждого Пользователь Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
		
		НоваяСтрокаПользователь = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаПользователь.Картинка      = БиблиотекаКартинок.Пользователь; 
		НоваяСтрокаПользователь.Значение      = Пользователь.ПолноеИмя;
		НоваяСтрокаПользователь.Представление = Пользователь.ПолноеИмя;
		
	КонецЦикла;
	
	// 1. Справочники
	Для Каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.Справочник;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 2. Документы
	Для Каждого ОбъектМетаданных Из Метаданные.Документы Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.Документ;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 3. Планы видов характеристик
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыВидовХарактеристик Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.ПланВидовХарактеристик;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 4. Планы счетов
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыСчетов Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.ПланСчетов;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 5. Планы видов расчета
	Для Каждого ОбъектМетаданных Из Метаданные.ПланыВидовРасчета Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.ПланВидовРасчета;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 6. Регистры сведений
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыСведений Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.РегистрСведений;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 7. Регистры накоплений
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыНакопления Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.РегистрНакопления;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 8. Регистры бухгалтерии
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыБухгалтерии Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.РегистрБухгалтерии;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 9. Регистры расчета
	Для Каждого ОбъектМетаданных Из Метаданные.РегистрыРасчета Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.РегистрРасчета;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 10. Бизнес-процессы
	Для Каждого ОбъектМетаданных Из Метаданные.БизнесПроцессы Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.БизнесПроцесс;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	// 11. Задачи
	Для Каждого ОбъектМетаданных Из Метаданные.Задачи Цикл
		
		НоваяСтрокаОбъект = Элементы.ИмяМетаданных.СписокВыбора.Добавить();
		
		НоваяСтрокаОбъект.Картинка      = БиблиотекаКартинок.Задача;
		НоваяСтрокаОбъект.Значение      = ОбъектМетаданных.ПолноеИмя();
		НоваяСтрокаОбъект.Представление = ОбъектМетаданных.Представление();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
