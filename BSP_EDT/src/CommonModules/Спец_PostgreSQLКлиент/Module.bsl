// @strict-types

//@skip-check method-too-many-params

#Область ПрограммныйИнтерфейс

// Выполнить запрос к PostgreSQL красиво, с открытием отдельной формы
// 
// Параметры:
//	ТекстЗапроса - Строка - Текст запроса PostgreSQL
//	ИмяТаблицы - Строка - Имя таблицы для обновления после выполнения запроса
//	ФормаВладелец - ФормаКлиентскогоПриложения, Форма, Неопределено - Форма владелец
//	ОписаниеОповещенияПослеЗакрытия - ОписаниеОповещения - Описание оповещения после закрытия
//	ОткрытьМодально - Булево - Открыть форму модально
//	Кэш - см. Спец_КлиентСерверГлобальный.Спец_ПолучитьКэш
// 
// Возвращаемое значение:
//	Булево, Произвольный - Если ОткрытьМодально = ИСТИНА, тогда результат выполнения формы, иначе флаг успешности начала выполнения запроса.
//
Функция ВыполнитьЗапросPostgreSQLКрасиво(Знач ТекстЗапроса, Знач ИмяТаблицы = "", Знач ФормаВладелец = Неопределено, Знач ОписаниеОповещенияПослеЗакрытия = Неопределено, Знач ОткрытьМодально = Ложь, Кэш = Неопределено) Экспорт
	
	Спец_Проверить(Спец_КомпонентаДополнительныеФункцииКлиентСервер.PostgreSQLСоединениеУспешноУстановлено(Кэш),
			"Не удалось подключиться к базе PostgreSQL!",
			"Спец_PostgreSQLКлиент.ВыполнитьЗапросPostgreSQLКрасиво");
	
	ПараметрыОткрытияФормы = Новый Структура("ТекстЗапроса, ИмяТаблицы", ТекстЗапроса, ИмяТаблицы);

#Если Не ВебКлиент Тогда

	Если ОткрытьМодально Тогда
		Возврат ОткрытьФормуМодально("ОбщаяФорма.Спец_ФормаВыполненияЗапросаPostgreSQL", ПараметрыОткрытияФормы, ФормаВладелец);
	КонецЕсли;

#КонецЕсли
	
	//@skip-check invocation-parameter-type-intersect
	ОткрытьФорму("ОбщаяФорма.Спец_ФормаВыполненияЗапросаPostgreSQL", ПараметрыОткрытияФормы, ФормаВладелец, , , , ОписаниеОповещенияПослеЗакрытия);
	Возврат Истина;

КонецФункции

#КонецОбласти
