// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Структура таблицы в PostgreSQL по имени метаданных в 1С.
// 
// Параметры:
//	НаименованиеВ1С - Строка - Наименование таблицы в 1С
//	НазначениеТаблицы - Строка - Назначение таблицы в 1С
// 
// Возвращаемое значение:
//	ФиксированнаяСтруктура - Структура таблицы по имени метаданных:
//		* Ссылка - СправочникСсылка.Спец_СтруктураТаблицБазыДанных - Ссылка на таблицу в PostgreSQL
//		* НаименованиеВ1С - Строка - Наименование таблицы в 1С
//		* ТекстЗапросаДляСозданияКопииВременнойТаблицы - Строка - Текст запроса SQL
//		* НаименованиеВPostgreSQL - Строка - Наименование таблицы в PostgreSQL
//		* КодТаблицы - Число - Код таблицы в PostgreSQL
//		* Поля - ФиксированноеСоответствие из КлючИЗначение - Соответствие имени поля в 1С и столбцов в PostgreSQL:
//			** Ключ - Строка - Имя столбца в 1С
//			** Значение - ФиксированныйМассив из см. Спец_PostgreSQLКлиентСервер.ПодготовитьСтруктуруСтолбцаВPostgreSQL
//		* ПоляPostgreSQL - ФиксированноеСоответствие из КлючИЗначение - Соответствие столбцов в PostgreSQL:
//			** Ключ - Строка - Имя столбца в PostgreSQL
//			** Значение - см. Спец_PostgreSQLКлиентСервер.ПодготовитьСтруктуруСтолбцаВPostgreSQL
//		* СоставныеПоля - ФиксированныйМассив из Строка - Массив имен составных полей (имена 1С)
//
Функция ПолучитьСтруктуруТаблицыПоИмениМетаданных(Знач НаименованиеВ1С, Знач НазначениеТаблицы = "Основная") Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	// Основные данные по таблице
	СтруктураРезультат = НоваяСтруктураТаблицыВPostgreSQL();

	Запрос = Новый Запрос();

#Область ТекстЗапроса

	Запрос.Текст =
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаРезультат.Ссылка КАК Ссылка,
	|	ТаблицаРезультат.НаименованиеВ1С КАК НаименованиеВ1С,
	|	ТаблицаРезультат.ТекстЗапросаДляСозданияКопииВременнойТаблицы КАК ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|	ТаблицаРезультат.НаименованиеВPostgreSQL КАК НаименованиеВPostgreSQL,
	|	ТаблицаРезультат.КодТаблицы КАК КодТаблицы
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка КАК Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование КАК НаименованиеВPostgreSQL,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С КАК НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код КАК КодТаблицы,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы КАК
	|			ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		1 КАК Приоритет
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.Метаданные = &НаименованиеВ1С
	|		И СтруктураТаблицPostgreSQL.Назначение = &Назначение
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления
	|
	|	объединить все
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		2
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С = &НаименованиеВ1С
	|		И СтруктураТаблицPostgreSQL.Метаданные <> """"
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		3
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С = &НаименованиеВ1С
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		4
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.Метаданные = &НаименованиеВ1С
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		5
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.Наименование = &НаименованиеВ1С
	|		И СтруктураТаблицPostgreSQL.НаименованиеВ1С <> """"
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицPostgreSQL.Ссылка,
	|		СтруктураТаблицPostgreSQL.Наименование,
	|		СтруктураТаблицPostgreSQL.НаименованиеВ1С,
	|		СтруктураТаблицPostgreSQL.Код,
	|		СтруктураТаблицPostgreSQL.ТекстЗапросаДляСозданияКопииВременнойТаблицы,
	|		6
	|	ИЗ
	|		Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|	ГДЕ
	|		СтруктураТаблицPostgreSQL.Наименование = &НаименованиеВ1С
	|		И НЕ СтруктураТаблицPostgreSQL.ПометкаУдаления) КАК ТаблицаРезультат
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРезультат.Приоритет";

#КонецОбласти

	Запрос.УстановитьПараметр("НаименованиеВ1С", НаименованиеВ1С);
	Запрос.УстановитьПараметр("Назначение", НазначениеТаблицы);
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	Если Не ВыборкаРезультат.Следующий() Тогда
		Возврат Спец_РаботаСКоллекциямиКлиентСервер.СкопироватьРекурсивно(СтруктураРезультат, Истина);
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(СтруктураРезультат, ВыборкаРезультат);
	
	// Добавляем поля
	ВыборкаРезультат = ПолучитьСтолбцыТаблицыВPostgreSQL(СтруктураРезультат.Ссылка);
	Пока ВыборкаРезультат.Следующий() Цикл

		ИмяДляСоответствия = ?(ПустаяСтрока(ВыборкаРезультат.ИмяСтолбцаВ1С), ВыборкаРезультат.ИмяСтолбцаВPostgreSQL, ВыборкаРезультат.ИмяСтолбцаВ1С);

		СтруктураПоля = Спец_PostgreSQLКлиентСервер.ПодготовитьСтруктуруСтолбцаВPostgreSQL();
		СтруктураПоля.ИмяВ1С = ИмяДляСоответствия;

		ЗаполнитьЗначенияСвойств(СтруктураПоля, ВыборкаРезультат);

		Если СтруктураРезультат.Поля[ИмяДляСоответствия] = Неопределено Тогда
			СтруктураРезультат.Поля[ИмяДляСоответствия] = Новый Массив();
		КонецЕсли;

		СтруктураРезультат.Поля[ИмяДляСоответствия].Добавить(СтруктураПоля);
		СтруктураРезультат.ПоляPostgreSQL[ВыборкаРезультат.ИмяСтолбцаВPostgreSQL] = СтруктураПоля;

		Если ЗначениеЗаполнено(ВыборкаРезультат.ТипСоставногоПоля) Тогда
			СтруктураРезультат.СоставныеПоля.Добавить(ВыборкаРезультат.ИмяСтолбцаВ1С);
		КонецЕсли;

	КонецЦикла;

	//@skip-check constructor-function-return-section
	Возврат Спец_РаботаСКоллекциямиКлиентСервер.СкопироватьСтруктуру(СтруктураРезультат, Истина);

КонецФункции

// Соответствие предопределённых данных и ГУИДов в PostgreSQL.
// 
// Возвращаемое значение:
//	ФиксированноеСоответствие из КлючИЗначение:
//		* Ключ - ЛюбаяСсылка - Ссылка на предопределённый объект
//		* Значение - Строка - ГУИД элемента в базе данных
//
Функция ПолучитьСоответствиеПредопределенныхДанныхИГУИДов() Экспорт

	СоответствиеРезультат = Новый Соответствие();

	ВыборкаРезультат = ПолучитьДанныеПоПредопределеннымОбъектамИИхГУИДами();
	Пока ВыборкаРезультат.Следующий() Цикл СоответствиеРезультат[ВыборкаРезультат.ПредопределенныйОбъект] = ВыборкаРезультат.ГУИДВБазеДанных; КонецЦикла;
	Возврат Новый ФиксированноеСоответствие(СоответствиеРезультат);

КонецФункции

// Имя столбца в PostgreSQL по имени колонки в 1С.
// 
// Параметры:
//	ИмяМетаданныхТаблицыВ1С - Строка - Имя метаданных таблицы в 1С
//	ИмяПоля - Строка - Имя поля в 1С
//	ТипСоставногоПоля - Неопределено, ПеречислениеСсылка.Спец_ТипыСоставныхПолейБазыДанных - Тип составного поля
// 
// Возвращаемое значение:
//  Строка - Имя столбца в PostgreSQL
//
Функция ПолучитьИмяПоляВPostgreSQLПоИмениВ1С(Знач ИмяМетаданныхТаблицыВ1С, Знач ИмяПоля, Знач ТипСоставногоПоля = Неопределено) Экспорт

	СтруктураТаблицы = Спец_PostgreSQLВызовСервераПовтИсп.ПолучитьСтруктуруТаблицыПоИмениМетаданных(ИмяМетаданныхТаблицыВ1С);
	Если ПустаяСтрока(СтруктураТаблицы.НаименованиеВPostgreSQL) Тогда
		Возврат "";
	КонецЕсли;

	ВРегИмяПоля = ВРег(ИмяПоля);
	Для Каждого КлючЗначение Из СтруктураТаблицы.Поля Цикл

		Если ВРег(КлючЗначение.Ключ) <> ВРегИмяПоля Тогда
			Продолжить;
		КонецЕсли;

		Если ТипСоставногоПоля = Неопределено Тогда

			МассивРезультат = Новый Массив(); // Массив из Строка
			Для Каждого СтруктураПоля Из КлючЗначение.Значение Цикл
				МассивРезультат.Добавить(СтруктураПоля.ИмяСтолбцаВPostgreSQL);
			КонецЦикла;

			Возврат СтрСоединить(МассивРезультат, ",");

		Иначе

			Если КлючЗначение.Значение.Количество() = 1 Тогда

				Для Каждого СтруктураПоля Из КлючЗначение.Значение Цикл
					Возврат СтруктураПоля.ИмяСтолбцаВPostgreSQL;
				КонецЦикла;

			КонецЕсли;

			Для Каждого СтруктураПоля Из КлючЗначение.Значение Цикл

				Если СтруктураПоля.ТипСоставногоПоля = ТипСоставногоПоля Тогда
					Возврат СтруктураПоля.ИмяСтолбцаВPostgreSQL;
				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЦикла;

	Возврат "";

КонецФункции

// Получить ГУИД предопределенного элемента в PostgreSQL.
// 
// Параметры:
//	ПредопределенныйЭлемент - ЛюбаяСсылка - Предопределенный элемент, для которого нужно получить ГУИД в PostgreSQL
// 
// Возвращаемое значение:
//	Строка - ГУИД объекта
//
Функция ПолучитьГУИДПредопределенногоЭлементаВPostgreSQL(Знач ПредопределенныйЭлемент) Экспорт

	СоответствиеОбъектов = Спец_PostgreSQLВызовСервераПовтИсп.ПолучитьСоответствиеПредопределенныхДанныхИГУИДов();
	Возврат Спец_РаботаСКоллекциямиКлиентСервер.СвойствоСоответствия(СоответствиеОбъектов, ПредопределенныйЭлемент, "");

КонецФункции

// Получить предопределённый элемент по ГУИДу в базе.
// 
// Параметры:
//  ГУИДЭлемента - Строка - ГУИД элемента
// 
// Возвращаемое значение:
//  ЛюбаяСсылка - Предопределённый объект по ГУИДу
//
Функция ПолучитьПредопределенныйЭлементПоГУИДуВБазе(Знач ГУИДЭлемента) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктураТаблицБазыДанныхПредопределенныеДанные.ЭлементСсылка КАК ЭлементСсылка
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицБазыДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спец_СтруктураТаблицБазыДанных.ПредопределенныеДанные КАК СтруктураТаблицБазыДанныхПредопределенныеДанные
	|		ПО СтруктураТаблицБазыДанных.Ссылка = СтруктураТаблицБазыДанныхПредопределенныеДанные.Ссылка
	|ГДЕ
	|	СтруктураТаблицБазыДанныхПредопределенныеДанные.ГУИДВБазеДанных = &ГУИДВБазеДанных
	|	И НЕ СтруктураТаблицБазыДанных.ПометкаУдаления";

	Запрос.УстановитьПараметр("ГУИДВБазеДанных", ГУИДЭлемента);

	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруПервойВыборкиЗапроса(Запрос, "ЭлементСсылка");

КонецФункции

// Получить наименование таблицы в 1С по коду в БД.
// 
// Параметры:
//  КодТаблицы - Число - Код таблицы в БД
// 
// Возвращаемое значение:
//  Строка - Наименование таблицы
//
Функция ПолучитьНаименованиеТаблицыПоКоду(Знач КодТаблицы) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Спец_СтруктураТаблицБазыДанных.НаименованиеВ1С КАК НаименованиеВ1С
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК Спец_СтруктураТаблицБазыДанных
	|ГДЕ
	|	Спец_СтруктураТаблицБазыДанных.Код = &Код
	|	И НЕ Спец_СтруктураТаблицБазыДанных.ПометкаУдаления";

	Запрос.УстановитьПараметр("Код", КодТаблицы);

	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктуруПервойВыборкиЗапроса(Запрос, "НаименованиеВ1С");

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
//	СсылкаНаТаблицу - СправочникСсылка.Спец_СтруктураТаблицБазыДанных
// 
// Возвращаемое значение:
//	ВыборкаИзРезультатаЗапроса:
//		* ИмяСтолбцаВPostgreSQL - Строка
//		* ИмяСтолбцаВ1С - Строка
//		* ТипДанных - ПеречислениеСсылка.Спец_ТипыДанныхБазыДанных
//		* ТипСоставногоПоля - ПеречислениеСсылка.Спец_ТипыСоставныхПолейБазыДанных
//		* ФункцияПреобразования - Строка
//		* НеNull - Булево
//
Функция ПолучитьСтолбцыТаблицыВPostgreSQL(Знач СсылкаНаТаблицу)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтруктураТаблицPostgreSQLСтолбцы.ИмяСтолбца КАК ИмяСтолбцаВPostgreSQL,
	|	СтруктураТаблицPostgreSQLСтолбцы.ИмяСтолбцаВ1С КАК ИмяСтолбцаВ1С,
	|	СтруктураТаблицPostgreSQLСтолбцы.ТипДанных КАК ТипДанных,
	|	СтруктураТаблицPostgreSQLСтолбцы.ТипСоставногоПоля КАК ТипСоставногоПоля,
	|	СтруктураТаблицPostgreSQLСтолбцы.ИмяТипаДанныхДляPostgreSQL КАК ИмяТипаДанныхДляPostgreSQL,
	|	СтруктураТаблицPostgreSQLСтолбцы.ФункцияПреобразования КАК ФункцияПреобразования,
	|	СтруктураТаблицPostgreSQLСтолбцы.НеNull КАК НеNull
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицPostgreSQL
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спец_СтруктураТаблицБазыДанных.Столбцы КАК СтруктураТаблицPostgreSQLСтолбцы
	|		ПО СтруктураТаблицPostgreSQL.Ссылка = СтруктураТаблицPostgreSQLСтолбцы.Ссылка
	|ГДЕ
	|	СтруктураТаблицPostgreSQL.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", СсылкаНаТаблицу);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

// Возвращаемое значение:
//	ВыборкаИзРезультатаЗапроса:
//		* ПредопределенныйОбъект - ЛюбаяСсылка
//		* ГУИДВБазеДанных - Строка
//
Функция ПолучитьДанныеПоПредопределеннымОбъектамИИхГУИДами()

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураТаблицPostgreSQLПредопределенныеДанные.ЭлементСсылка КАК ПредопределенныйОбъект,
	|	СтруктураТаблицPostgreSQLПредопределенныеДанные.ГУИДВБазеДанных КАК ГУИДВБазеДанных
	|ИЗ
	|	Справочник.Спец_СтруктураТаблицБазыДанных КАК СтруктураТаблицБазыДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Спец_СтруктураТаблицБазыДанных.ПредопределенныеДанные КАК
	|			СтруктураТаблицPostgreSQLПредопределенныеДанные
	|		ПО СтруктураТаблицБазыДанных.Ссылка = СтруктураТаблицPostgreSQLПредопределенныеДанные.Ссылка
	|ГДЕ
	|	НЕ СтруктураТаблицБазыДанных.ПометкаУдаления";

	Возврат Запрос.Выполнить().Выбрать();

КонецФункции

//@skip-check structure-consructor-too-many-keys
#Область Типизация

// Возвращаемое значение:
//	Структура:
//		* Ссылка - СправочникСсылка.Спец_СтруктураТаблицБазыДанных
//		* НаименованиеВ1С - Строка
//		* ТекстЗапросаДляСозданияКопииВременнойТаблицы - Строка
//		* НаименованиеВPostgreSQL - Строка
//		* КодТаблицы - Число
//		* Поля - Соответствие из КлючИЗначение:
//			** Ключ - Строка - Имя столбца в 1С
//			** Значение - Массив из см. Спец_PostgreSQLКлиентСервер.ПодготовитьСтруктуруСтолбцаВPostgreSQL
//		* ПоляPostgreSQL - Соответствие из КлючИЗначение:
//			** Ключ - Строка
//			** Значение - см. Спец_PostgreSQLКлиентСервер.ПодготовитьСтруктуруСтолбцаВPostgreSQL
//		* СоставныеПоля - Массив из Строка
//
Функция НоваяСтруктураТаблицыВPostgreSQL()

	Возврат Новый Структура("Ссылка,
							|НаименованиеВ1С,
							|ТекстЗапросаДляСозданияКопииВременнойТаблицы,
							|НаименованиеВPostgreSQL,
							|КодТаблицы,
							|Поля,
							|ПоляPostgreSQL,
							|СоставныеПоля",
							
							Справочники.Спец_СтруктураТаблицБазыДанных.ПустаяСсылка(),
							"",
							"",
							"",
							-1,
							Новый Соответствие(),
							Новый Соответствие(),
							Новый Массив());

КонецФункции

#КонецОбласти

#КонецОбласти
