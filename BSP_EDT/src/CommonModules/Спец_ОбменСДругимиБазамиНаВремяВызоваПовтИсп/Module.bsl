
// @strict-types

//@skip-check constructor-function-return-section

#Область СлужебныйПрограммныйИнтерфейс

// ++ Спец_БСП.ОбменСДругимиБазами_ЕстьМодульОтправителя

// Параметры:
//  ПолноеИмяМетаданных - Строка
// 
// Возвращаемое значение:
//  Структура:
//		* ТаблицаСоответствиеОбъектов - ТаблицаЗначений:
//			** База - СправочникСсылка.Спец_Базы
//			** ИмяТабличнойЧастиИсточник - Строка
//			** ИмяРеквизитаИсточник - Строка
//		* ТаблицаРезультат - ТаблицаЗначений:
//			** База - СправочникСсылка.Спец_Базы
//			** РегистрироватьСОбменомДанными - Булево
//			** ИмяРеквизитаДляПроверкиВКлючевыхОбъектах - Строка
//			** ТекстЗапросаИсключения_Отправитель - Строка
//
Функция ПолучитьСтруктуруПараметровДляПроверкиУОтправителя(Знач ПолноеИмяМетаданных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ПараметрыОбменовСДругимиБазами.База КАК База,
	|	ПараметрыОбменовСДругимиБазами.ПолноеИмяОбъектаМетаданныхИсточник КАК ПолноеИмяОбъектаМетаданныхИсточник,
	|	ПараметрыОбменовСДругимиБазами.РегистрироватьСОбменомДанными КАК РегистрироватьСОбменомДанными,
	|	ПараметрыОбменовСДругимиБазами.ИмяРеквизитаДляПроверкиВКлючевыхОбъектах КАК ИмяРеквизитаДляПроверкиВКлючевыхОбъектах,
	|	ПараметрыОбменовСДругимиБазами.ТекстЗапросаИсключения_Отправитель КАК ТекстЗапросаИсключения_Отправитель
	|ПОМЕСТИТЬ втРезультат
	|ИЗ
	|	РегистрСведений.Спец_ПараметрыОбменовСДругимиБазами КАК ПараметрыОбменовСДругимиБазами
	|ГДЕ
	|	ПараметрыОбменовСДругимиБазами.ПолноеИмяОбъектаМетаданныхИсточник = &ПолноеИмяОбъектаМетаданныхИсточник
	|	И ПараметрыОбменовСДругимиБазами.ОбменВключен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРезультат.База КАК База,
	|	втРезультат.РегистрироватьСОбменомДанными КАК РегистрироватьСОбменомДанными,
	|	втРезультат.ИмяРеквизитаДляПроверкиВКлючевыхОбъектах КАК ИмяРеквизитаДляПроверкиВКлючевыхОбъектах,
	|	втРезультат.ТекстЗапросаИсключения_Отправитель КАК ТекстЗапросаИсключения_Отправитель
	|ИЗ
	|	втРезультат КАК втРезультат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеОбъектовДляОбмена.База КАК База,
	|	СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник КАК ИмяТабличнойЧастиИсточник,
	|	СоответствиеОбъектовДляОбмена.ИмяРеквизитаИсточник КАК ИмяРеквизитаИсточник
	|ИЗ
	|	РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРезультат КАК втРезультат
	|		ПО СоответствиеОбъектовДляОбмена.База = втРезультат.База
	|		И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = втРезультат.ПолноеИмяОбъектаМетаданныхИсточник
	|ГДЕ
	|	СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник <> """"";
	
	Запрос.УстановитьПараметр("ПолноеИмяОбъектаМетаданныхИсточник", ПолноеИмяМетаданных);
	
	ПакетыЗапросов = Запрос.ВыполнитьПакет();
	ВГраница       = ПакетыЗапросов.ВГраница();
	
	ТаблицаСоответствиеОбъектов = ПакетыЗапросов[ВГраница].Выгрузить();
	ТаблицаСоответствиеОбъектов.Индексы.Добавить("База, ИмяТабличнойЧастиИсточник, ИмяРеквизитаИсточник");
	
	ТаблицаРезультат = ПакетыЗапросов[ВГраница - 1].Выгрузить();
	
	Возврат Новый Структура("ТаблицаСоответствиеОбъектов, ТаблицаРезультат",
			ТаблицаСоответствиеОбъектов,
			ТаблицаРезультат);
	
КонецФункции

// Параметры:
//  База - СправочникСсылка.Спец_Базы
// 
// Возвращаемое значение:
//  Структура:
//		* ТаблицаСтруктураИзДругойБазы - ТаблицаЗначений:
//			** ИмяОбъектаМетаданных - Строка
//			** ИмяТабличнойЧасти - Строка
//			** ИмяРеквизита - Строка
//			** ИмяТаблицыВБД - Строка
//			** ИмяСтолбцаВБД - Строка
//			** ГУИДПеречисленияВБазеДанных - Строка
//			** ИмяТипаДанныхДляPostgreSQL - Строка
//			** КодТаблицыВБД - Число
//			** ТипДанных - ПеречислениеСсылка.Спец_ТипыДанныхБазыДанных
//			** ТипСоставногоПоля - ПеречислениеСсылка.Спец_ТипыСоставныхПолейБазыДанных
//		* ТаблицаСоответствиеОбъектов - ТаблицаЗначений:
// 			** ИмяОбъектаМетаданныхИсточник - Строка
// 			** ИмяТабличнойЧастиИсточник - Строка
// 			** ИмяРеквизитаИсточник - Строка
// 			** ТипПередачи - ПеречислениеСсылка.Спец_ТипыПередачиОбъектовДляОбмена
// 			** ИмяОбъектаМетаданныхПриемник - Строка
// 			** ИмяТабличнойЧастиПриемник - Строка
// 			** ИмяРеквизитаПриемник - Строка
// 			** ПолноеИмяТипаОбъектаМетаданныхИсточник - Строка
// 			** ПолноеИмяТипаОбъектаМетаданныхПриемник - Строка
//		* ТаблицаОбщиеПараметрыОбменов - ТаблицаЗначений:
//			** ПолноеИмяОбъектаМетаданныхИсточник - Строка
//			** ПолноеИмяОбъектаМетаданныхПриемник - Строка
//			** ТипПередачи - ПеречислениеСсылка.Спец_ТипыПередачиОбъектовДляОбмена
//
Функция ПолучитьСтруктуруТаблицДляФормированияТекстовЗапросов(Знач База) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных КАК ИмяОбъектаМетаданных,
	|	СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	СтруктураТаблицБДИзДругихБаз.ИмяРеквизита КАК ИмяРеквизита,
	|	СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД КАК ИмяТаблицыВБД,
	|	СтруктураТаблицБДИзДругихБаз.ИмяСтолбцаВБД КАК ИмяСтолбцаВБД,
	|	СтруктураТаблицБДИзДругихБаз.ГУИДПеречисленияВБазеДанных КАК ГУИДПеречисленияВБазеДанных,
	|	СтруктураТаблицБДИзДругихБаз.ИмяТипаДанныхДляPostgreSQL КАК ИмяТипаДанныхДляPostgreSQL,
	|	СтруктураТаблицБДИзДругихБаз.КодТаблицыВБД КАК КодТаблицыВБД,
	|	СтруктураТаблицБДИзДругихБаз.ТипДанных КАК ТипДанных,
	|	СтруктураТаблицБДИзДругихБаз.ТипСоставногоПоля КАК ТипСоставногоПоля
	|ИЗ
	|	РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|ГДЕ
	|	СтруктураТаблицБДИзДругихБаз.База = &База
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник КАК ИмяОбъектаМетаданныхИсточник,
	|	СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник КАК ИмяТабличнойЧастиИсточник,
	|	СоответствиеОбъектовДляОбмена.ИмяРеквизитаИсточник КАК ИмяРеквизитаИсточник,
	|	СоответствиеОбъектовДляОбмена.ТипПередачи КАК ТипПередачи,
	|	СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник КАК ИмяОбъектаМетаданныхПриемник,
	|	СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник КАК ИмяТабличнойЧастиПриемник,
	|	СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник КАК ИмяРеквизитаПриемник,
	|	СоответствиеОбъектовДляОбмена.ПолноеИмяТипаОбъектаМетаданныхИсточник КАК ПолноеИмяТипаОбъектаМетаданныхИсточник,
	|	СоответствиеОбъектовДляОбмена.ПолноеИмяТипаОбъектаМетаданныхПриемник КАК ПолноеИмяТипаОбъектаМетаданныхПриемник
	|ИЗ
	|	РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|ГДЕ
	|	СоответствиеОбъектовДляОбмена.База = &База
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыОбменовСДругимиБазами.ПолноеИмяОбъектаМетаданныхИсточник КАК ПолноеИмяОбъектаМетаданныхИсточник,
	|	ПараметрыОбменовСДругимиБазами.ПолноеИмяОбъектаМетаданныхПриемник КАК ПолноеИмяОбъектаМетаданныхПриемник,
	|	ПараметрыОбменовСДругимиБазами.ТипПередачи КАК ТипПередачи
	|ИЗ
	|	РегистрСведений.Спец_ПараметрыОбменовСДругимиБазами КАК ПараметрыОбменовСДругимиБазами
	|ГДЕ
	|	ПараметрыОбменовСДругимиБазами.База = &База";
	
	Запрос.УстановитьПараметр("База", База);
	
	ПакетыЗапросов = Запрос.ВыполнитьПакет();
	ВГраница       = ПакетыЗапросов.ВГраница();
	
	ТаблицаСтруктураИзДругойБазы = ПакетыЗапросов[ВГраница - 2].Выгрузить();
	ТаблицаСтруктураИзДругойБазы.Индексы.Добавить("ИмяОбъектаМетаданных, ИмяТабличнойЧасти");
	
	ТаблицаСоответствиеОбъектов = ПакетыЗапросов[ВГраница - 1].Выгрузить();
	ТаблицаСоответствиеОбъектов.Индексы.Добавить("ИмяОбъектаМетаданныхПриемник, ИмяТабличнойЧастиПриемник, ИмяРеквизитаПриемник");
	
	ТаблицаОбщиеПараметрыОбменов = ПакетыЗапросов[ВГраница].Выгрузить();
	ТаблицаОбщиеПараметрыОбменов.Индексы.Добавить("ПолноеИмяОбъектаМетаданныхИсточник");
	
	Возврат Новый Структура("ТаблицаСтруктураИзДругойБазы, ТаблицаСоответствиеОбъектов, ТаблицаОбщиеПараметрыОбменов",
			ТаблицаСтруктураИзДругойБазы,
			ТаблицаСоответствиеОбъектов,
			ТаблицаОбщиеПараметрыОбменов);
	
КонецФункции

// -- Спец_БСП.ОбменСДругимиБазами_ЕстьМодульОтправителя

// ++ Спец_БСП.ОбменСДругимиБазами_ЕстьМодульПолучателя

// Параметры:
//  ПолноеИмяМетаданных - Строка
// 
// Возвращаемое значение:
//  ФиксированныйМассив из ФиксированнаяСтруктура:
//  	* База - СправочникСсылка.Спец_Базы
//  	* ПолноеИмяОбъектаМетаданных - Строка
//  	* ПоляДляИзменения - Строка
//  	* ТекстЗапросаИсключения - Строка
//
Функция ПолучитьМассивСтруктурДляПроверкиУПолучателя(Знач ПолноеИмяМетаданных) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ОбъектыДляРегистрацииДляОбменов.База КАК База,
	|	ОбъектыДляРегистрацииДляОбменов.ПолноеИмяОбъектаМетаданных КАК ПолноеИмяОбъектаМетаданных,
	|	ОбъектыДляРегистрацииДляОбменов.ПоляДляИзменения КАК ПоляДляИзменения,
	|	ОбъектыДляРегистрацииДляОбменов.ТекстЗапросаИсключения КАК ТекстЗапросаИсключения
	|ИЗ
	|	РегистрСведений.Спец_ОбъектыДляРегистрацииДляОбменов КАК ОбъектыДляРегистрацииДляОбменов
	|ГДЕ
	|	ОбъектыДляРегистрацииДляОбменов.ПолноеИмяОбъектаМетаданных = &ПолноеИмяОбъектаМетаданных";
	
	Запрос.УстановитьПараметр("ПолноеИмяОбъектаМетаданных", ПолноеИмяМетаданных);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	МассивРезультат = Спец_ОбщегоНазначения.ПреобразоватьТаблицуЗначенийВМассивСтрок(ТаблицаРезультат);
	Возврат Спец_РаботаСКоллекциямиКлиентСервер.СкопироватьМассив(МассивРезультат, Истина);
	
КонецФункции

// -- Спец_БСП.ОбменСДругимиБазами_ЕстьМодульПолучателя

#КонецОбласти