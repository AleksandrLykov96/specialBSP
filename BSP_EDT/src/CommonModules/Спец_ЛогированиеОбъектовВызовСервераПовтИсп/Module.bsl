// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Нужный тип логирования объекта по имени объекта в 1С.
// 
// Параметры:
//  ПолноеИмяОбъекта - Строка - Полное имя объекта в 1С
// 
// Возвращаемое значение:
//  Число - Тип логирования:
//		0 - Логирование по объекту отключено
//		1 - Автоматическое логирование через 1С
//		2 - Ручное логирование
//
Функция ТипЛогированияОбъекта(Знач ПолноеИмяОбъекта) Экспорт
	
	Если ПустаяСтрока(ПолноеИмяОбъекта) Тогда
		Возврат 0;
	КонецЕсли;
	
	// По метаданным
	НаборЗаписей = РегистрыСведений.Спец_ОбъектыДляЛогирования.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИмяМетаданных.Установить(ПолноеИмяОбъекта);
	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		Возврат 1;
	КонецЕсли;
	
	// По пользователю
	НаборЗаписей.Отбор.ИмяМетаданных.Установить(Спец_ОбщегоНазначенияКлиентСервер.ТекущийПользователь1СПолноеИмя());
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		Возврат 2;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

// Флаг того, что по данному уровню логирования должны писаться логи.
// 
// Параметры:
//  УровеньЛогированияДляЗаписи - ПеречислениеСсылка.Спец_УровниЛогирования, Строка - Уровень логирования для записи
// 
// Возвращаемое значение:
//  Булево - Данный уровень логирования нужно писать
//
Функция ДанныйУровеньЛогированияНужноПисать(Знач УровеньЛогированияДляЗаписи) Экспорт
	
	МинимальныйУровеньЛогирования = Спец_ПолучитьКонстанту(ПланыВидовХарактеристик.Спец_Константы.МинимальныйУровеньЛогирования); // ПеречислениеСсылка.Спец_УровниЛогирования
	Если ТипЗнч(УровеньЛогированияДляЗаписи) = Тип("Строка") Тогда
		
		УровеньЛогированияДляПроверки = ?(ПустаяСтрока(УровеньЛогированияДляЗаписи),
				Перечисления.Спец_УровниЛогирования.ПустаяСсылка(),
				Перечисления.Спец_УровниЛогирования[УровеньЛогированияДляЗаписи]);
		
	Иначе
		
		УровеньЛогированияДляПроверки = УровеньЛогированияДляЗаписи;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(МинимальныйУровеньЛогирования)
			И Перечисления.Спец_УровниЛогирования.Индекс(УровеньЛогированияДляПроверки) >= Перечисления.Спец_УровниЛогирования.Индекс(МинимальныйУровеньЛогирования);

КонецФункции

#КонецОбласти
