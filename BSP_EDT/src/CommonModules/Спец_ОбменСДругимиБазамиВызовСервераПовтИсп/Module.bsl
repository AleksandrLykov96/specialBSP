
//@skip-check query-in-loop
//@skip-check method-too-many-params
//@skip-check structure-consructor-too-many-keys

#Область СлужебныйПрограммныйИнтерфейс

Функция МассивСтруктурБазовыхURLДляЗапросов(Знач База, Знач СначалаПоЛокальнымАдресам = Истина, Знач ТолькоНужныеАдреса = Ложь) Экспорт
	
	МассивРезультат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	Спец_БазыHTTP.Адрес КАК Адрес,
	|	Спец_БазыHTTP.Порт КАК Порт,
	|	Спец_БазыHTTP.Пользователь КАК Пользователь,
	|	Спец_БазыHTTP.Пароль КАК Пароль,
	|	Спец_БазыHTTP.ИспользоватьЗащищенныйПротокол КАК ИспользоватьЗащищенныйПротокол,
	|	Спец_БазыHTTP.ОбщееНаименованиеПубликации КАК ОбщееНаименованиеПубликации,
	|	Спец_БазыHTTP.ТаймаутДлинный КАК ТаймаутДлинный,
	|	Спец_БазыHTTP.ТаймаутКороткий КАК ТаймаутКороткий,
	|	Спец_БазыHTTP.ЭтоЛокальныйАдрес КАК ЭтоЛокальныйАдрес
	|ИЗ
	|	Справочник.Спец_Базы.HTTP КАК Спец_БазыHTTP
	|ГДЕ
	|	Спец_БазыHTTP.Ссылка = &База
	|
	|УПОРЯДОЧИТЬ ПО
	|	Спец_БазыHTTP.ЭтоЛокальныйАдрес %1,
	|	Спец_БазыHTTP.НомерСтроки";
	
	Запрос.Текст = СтрШаблон(Запрос.Текст, ?(СначалаПоЛокальнымАдресам, "УБЫВ", "ВОЗР"));
	
	Запрос.УстановитьПараметр("База", База);
	
	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
	Пока ВыборкаРезультат.Следующий() Цикл
		
		Если ТолькоНужныеАдреса
			И ((СначалаПоЛокальнымАдресам И Не ВыборкаРезультат.ЭтоЛокальныйАдрес)
				Или (Не СначалаПоЛокальнымАдресам И ВыборкаРезультат.ЭтоЛокальныйАдрес)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		СтруктураURL = Новый Структура("БазовыйURL, ТаймаутДлинный, ТаймаутКороткий, Пользователь, Пароль",
				СтрШаблон("%1://%2:%3@%4%5/%6/",
						?(ВыборкаРезультат.ИспользоватьЗащищенныйПротокол, "https", "http"),
						ВыборкаРезультат.Пользователь,
						ВыборкаРезультат.Пароль,
						ВыборкаРезультат.Адрес,
						Формат(ВыборкаРезультат.Порт, "ЧГ=; ЧФ=:Ч"),
						ВыборкаРезультат.ОбщееНаименованиеПубликации),
				ВыборкаРезультат.ТаймаутДлинный,
				ВыборкаРезультат.ТаймаутКороткий,
				ВыборкаРезультат.Пользователь,
				ВыборкаРезультат.Пароль);
		
		МассивРезультат.Добавить(Новый ФиксированнаяСтруктура(СтруктураURL));
		
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(МассивРезультат);
	
КонецФункции

Функция ИмяТаблицыВБДДляДругойБазы(Знач База, Знач ИмяМетаданных) Экспорт
	
	Если Не Спец_ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("Спец_БСП.Спец_ОбменыСДругимиБазами.Спец_ОбменыСДругимиБазами_Отправитель") Тогда
		Возврат "";
	КонецЕсли;
	
	МассивРазделенный = СтрРазделить(ИмяМетаданных, ".", Ложь);
	Если МассивРазделенный.Количество() = 4 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(3);
		
	ИначеЕсли МассивРазделенный.Количество() = 3 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(2);
		
	Иначе
		
		ИмяТабличнойЧасти = "";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Результат.ИмяТаблицыВБД КАК ИмяТаблицыВБД
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД КАК ИмяТаблицыВБД,
	|		1 КАК Приоритет
	|	ИЗ
	|		РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|			ПО СоответствиеОбъектовДляОбмена.База = СтруктураТаблицБДИзДругихБаз.База
	|				И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник = СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных
	|				И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник = СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти
	|				И СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник = СтруктураТаблицБДИзДругихБаз.ИмяРеквизита
	|	ГДЕ
	|		СоответствиеОбъектовДляОбмена.База = &База
	|		И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = &ИмяОбъектаМетаданных
	|		И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник = &ИмяТабличнойЧасти
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД <> """"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД,
	|		2
	|	ИЗ
	|		РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|	ГДЕ
	|		СтруктураТаблицБДИзДругихБаз.База = &База
	|		И СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти = &ИмяТабличнойЧасти
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД <> """") КАК Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Результат.Приоритет";
	
	Запрос.УстановитьПараметр("База"                 , База);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных" , ИмяМетаданных);
	Запрос.УстановитьПараметр("ИмяТабличнойЧасти"    , ИмяТабличнойЧасти);
	
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктураПервойВыборкиЗапроса(Запрос, "ИмяТаблицыВБД");
	
КонецФункции

Функция ИмяРеквизитаИзБДДляДругойБазы(Знач База, Знач ИмяМетаданных, Знач ИмяРеквизита, Знач СоставнойТип = Неопределено) Экспорт
	
	Если Не Спец_ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("Спец_БСП.Спец_ОбменыСДругимиБазами.Спец_ОбменыСДругимиБазами_Отправитель") Тогда
		Возврат "";
	КонецЕсли;
	
	// Проверяем табличную часть
	МассивРазделенный = СтрРазделить(ИмяМетаданных, ".", Ложь);
	Если МассивРазделенный.Количество() = 4 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(3);
		
	ИначеЕсли МассивРазделенный.Количество() = 3 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(2);
		
	Иначе
		
		ИмяТабличнойЧасти = "";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СтруктураТаблицБДИзДругихБаз.ИмяСтолбцаВБД КАК ИмяСтолбцаВБД,
	|	1 КАК Приоритет
	|ПОМЕСТИТЬ втРезультат
	|ИЗ
	|	РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|		ПО СоответствиеОбъектовДляОбмена.База = СтруктураТаблицБДИзДругихБаз.База
	|			И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник = СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных
	|			И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник = СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти
	|			И СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник = СтруктураТаблицБДИзДругихБаз.ИмяРеквизита
	|ГДЕ
	|	НЕ &ОтборПоТипуСоставногоПоля
	|	И СоответствиеОбъектовДляОбмена.База = &База
	|	И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = &ИмяОбъектаМетаданных
	|	И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник = &ИмяТабличнойЧасти
	|	И СоответствиеОбъектовДляОбмена.ИмяРеквизитаИсточник = &ИмяРеквизита
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктураТаблицБДИзДругихБаз.ИмяСтолбцаВБД,
	|	1
	|ИЗ
	|	РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|		ПО СоответствиеОбъектовДляОбмена.База = СтруктураТаблицБДИзДругихБаз.База
	|			И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник = СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных
	|			И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник = СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти
	|			И СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник = СтруктураТаблицБДИзДругихБаз.ИмяРеквизита
	|ГДЕ
	|	&ОтборПоТипуСоставногоПоля
	|	И СоответствиеОбъектовДляОбмена.База = &База
	|	И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = &ИмяОбъектаМетаданных
	|	И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник = &ИмяТабличнойЧасти
	|	И СоответствиеОбъектовДляОбмена.ИмяРеквизитаИсточник = &ИмяРеквизита
	|	И СтруктураТаблицБДИзДругихБаз.ТипСоставногоПоля = &ТипСоставногоПоля
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтруктураТаблицБДИзДругихБаз.ИмяСтолбцаВБД,
	|	2
	|ИЗ
	|	РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|ГДЕ
	|	НЕ &ОтборПоТипуСоставногоПоля
	|	И СтруктураТаблицБДИзДругихБаз.База = &База
	|	И СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|	И СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти = &ИмяТабличнойЧасти
	|	И СтруктураТаблицБДИзДругихБаз.ИмяРеквизита = &ИмяРеквизита
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктураТаблицБДИзДругихБаз.ИмяСтолбцаВБД,
	|	2
	|ИЗ
	|	РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|ГДЕ
	|	&ОтборПоТипуСоставногоПоля
	|	И СтруктураТаблицБДИзДругихБаз.База = &База
	|	И СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|	И СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти = &ИмяТабличнойЧасти
	|	И СтруктураТаблицБДИзДругихБаз.ИмяРеквизита = &ИмяРеквизита
	|	И СтруктураТаблицБДИзДругихБаз.ТипСоставногоПоля = &ТипСоставногоПоля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втРезультат.ИмяСтолбцаВБД КАК ИмяСтолбцаВБД
	|ИЗ
	|	втРезультат КАК втРезультат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(втРезультат.Приоритет) КАК Приоритет
	|		ИЗ
	|			втРезультат КАК втРезультат) КАК МинимальныйПриоритет
	|		ПО втРезультат.Приоритет = МинимальныйПриоритет.Приоритет";
	
	Запрос.УстановитьПараметр("База"                      , База);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных"      , ИмяМетаданных);
	Запрос.УстановитьПараметр("ИмяТабличнойЧасти"         , ИмяТабличнойЧасти);
	Запрос.УстановитьПараметр("ИмяРеквизита"              , ИмяРеквизита);
	Запрос.УстановитьПараметр("ОтборПоТипуСоставногоПоля" , СоставнойТип <> Неопределено);
	Запрос.УстановитьПараметр("ТипСоставногоПоля"         , СоставнойТип);
	
	Возврат СтрСоединить(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяСтолбцаВБД"), ",");
	
КонецФункции

Функция ТипПередачиОбъектаВДругуюБазу(Знач База, Знач ИмяМетаданных) Экспорт
	
	Если Не Спец_ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("Спец_БСП.Спец_ОбменыСДругимиБазами.Спец_ОбменыСДругимиБазами_Отправитель") Тогда
		Возврат Перечисления.Спец_ТипыПередачиОбъектовДляОбмена.ЭтоПростойТип;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений["Спец_ПараметрыОбменовСДругимиБазами"].СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.База.Установить(База);
	НаборЗаписей.Отбор.ПолноеИмяОбъектаМетаданныхИсточник.Установить(ИмяМетаданных);
	
	НаборЗаписей.Прочитать();
	Возврат ?(НаборЗаписей.Количество() > 0, НаборЗаписей.Получить(0).ТипПередачи, Перечисления.Спец_ТипыПередачиОбъектовДляОбмена.ЭтоПростойТип);
	
КонецФункции

Функция КодТаблицыВБДДляДругойБазы(Знач База, Знач ИмяМетаданных) Экспорт
	
	Если Не Спец_ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("Спец_БСП.Спец_ОбменыСДругимиБазами.Спец_ОбменыСДругимиБазами_Отправитель") Тогда
		Возврат 0;
	КонецЕсли;
	
	МассивРазделенный = СтрРазделить(ИмяМетаданных, ".", Ложь);
	Если МассивРазделенный.Количество() = 4 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(3);
		
	ИначеЕсли МассивРазделенный.Количество() = 3 Тогда
		
		ИмяМетаданных = МассивРазделенный.Получить(0) + "." + МассивРазделенный.Получить(1);
		ИмяТабличнойЧасти = МассивРазделенный.Получить(2);
		
	Иначе
		
		ИмяТабличнойЧасти = "";
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Результат.КодТаблицыВБД КАК КодТаблицыВБД
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.КодТаблицыВБД КАК КодТаблицыВБД,
	|		1 КАК Приоритет
	|	ИЗ
	|		РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|			ПО СоответствиеОбъектовДляОбмена.База = СтруктураТаблицБДИзДругихБаз.База
	|				И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник = СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных
	|				И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник = СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти
	|				И СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник = СтруктураТаблицБДИзДругихБаз.ИмяРеквизита
	|	ГДЕ
	|		СоответствиеОбъектовДляОбмена.База = &База
	|		И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = &ИмяОбъектаМетаданных
	|		И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиИсточник = &ИмяТабличнойЧасти
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД <> """"
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.КодТаблицыВБД,
	|		2
	|	ИЗ
	|		РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|	ГДЕ
	|		СтруктураТаблицБДИзДругихБаз.База = &База
	|		И СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти = &ИмяТабличнойЧасти
	|		И СтруктураТаблицБДИзДругихБаз.ИмяТаблицыВБД <> """") КАК Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Результат.Приоритет";
	
	Запрос.УстановитьПараметр("База"                 , База);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных" , ИмяМетаданных);
	Запрос.УстановитьПараметр("ИмяТабличнойЧасти"    , ИмяТабличнойЧасти);
	
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктураПервойВыборкиЗапроса(Запрос, "КодТаблицыВБД");
	
КонецФункции

Функция ГУИДПредопределенногоЗначенияДляДругойБазы(Знач База, Знач ИмяМетаданных, Знач ПеречислениеСсылка) Экспорт
	
	Если Не Спец_ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("Спец_БСП.Спец_ОбменыСДругимиБазами.Спец_ОбменыСДругимиБазами_Отправитель") Тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Результат.ГУИДПеречисленияВБазеДанных КАК ГУИДПеречисленияВБазеДанных
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.ГУИДПеречисленияВБазеДанных КАК ГУИДПеречисленияВБазеДанных,
	|		1 КАК Приоритет
	|	ИЗ
	|		РегистрСведений.Спец_СоответствиеОбъектовДляОбмена КАК СоответствиеОбъектовДляОбмена
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|			ПО СоответствиеОбъектовДляОбмена.База = СтруктураТаблицБДИзДругихБаз.База
	|				И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхПриемник = СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных
	|				И СоответствиеОбъектовДляОбмена.ИмяТабличнойЧастиПриемник = СтруктураТаблицБДИзДругихБаз.ИмяТабличнойЧасти
	|				И СоответствиеОбъектовДляОбмена.ИмяРеквизитаПриемник = СтруктураТаблицБДИзДругихБаз.ИмяРеквизита
	|	ГДЕ
	|		СоответствиеОбъектовДляОбмена.База = &База
	|		И СоответствиеОбъектовДляОбмена.ИмяОбъектаМетаданныхИсточник = &ИмяОбъектаМетаданных
	|		И СоответствиеОбъектовДляОбмена.ИмяРеквизитаИсточник = &ИмяРеквизита
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		СтруктураТаблицБДИзДругихБаз.ГУИДПеречисленияВБазеДанных,
	|		2
	|	ИЗ
	|		РегистрСведений.Спец_СтруктураТаблицБДИзДругихБаз КАК СтруктураТаблицБДИзДругихБаз
	|	ГДЕ
	|		СтруктураТаблицБДИзДругихБаз.База = &База
	|		И СтруктураТаблицБДИзДругихБаз.ИмяОбъектаМетаданных = &ИмяОбъектаМетаданных
	|		И СтруктураТаблицБДИзДругихБаз.ИмяРеквизита = &ИмяРеквизита) КАК Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Результат.Приоритет";
	
	Запрос.УстановитьПараметр("База"                 , База);
	Запрос.УстановитьПараметр("ИмяОбъектаМетаданных" , ИмяМетаданных);
	Запрос.УстановитьПараметр("ИмяРеквизита"         , XMLСтрока(ПеречислениеСсылка));
	
	Возврат Спец_ОбщегоНазначения.ПолучитьСтруктураПервойВыборкиЗапроса(Запрос, "ГУИДПеречисленияВБазеДанных");
	
КонецФункции

Функция МассивКонстантДляОбменаСДругимиБазами() Экспорт
	
	МассивКонстантДляОбмена = Новый Массив;
	
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.Telegram);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ИдентификаторБота);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ИдентификаторыПолучателей);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.Взаимодействия);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ОтправкаEMail);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.АдресСервераPOP3);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.АдресСервераSMTP);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПарольEMail);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПарольSMTP);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПользовательEMail);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПользовательSMTP);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПортPOP3);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПортSMTP);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ТаймаутОтправкиEMail);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ОбщиеПараметры);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.РаботаСБазойДанных);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ОбщийFTPКаталог);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПользователиКоторымНеНадоЗаканчивать);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПараметрыОбменовСДругимиБазами);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ТаймаутФоновыхЗаданий);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПараметрыФоновыхЗаданий);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ИмяПользователяПоУмолчанию);
	МассивКонстантДляОбмена.Добавить(ПланыВидовХарактеристик.Спец_Константы.ПарольПользователяПоУмолчанию);
	
	Возврат Новый ФиксированныйМассив(МассивКонстантДляОбмена);
	
КонецФункции

#КонецОбласти
